Index: lib/vanilla-tilt.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict';\r\n\r\nvar classCallCheck = function (instance, Constructor) {\r\n  if (!(instance instanceof Constructor)) {\r\n    throw new TypeError(\"Cannot call a class as a function\");\r\n  }\r\n};\r\n\r\n/**\r\n * Created by È˜andor Sergiu (micku7zu) on 1/27/2017.\r\n * Original idea: https://github.com/gijsroge/tilt.js\r\n * MIT License.\r\n * Version 1.6.1\r\n */\r\n\r\nvar VanillaTilt = function () {\r\n  function VanillaTilt(element) {\r\n    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n    classCallCheck(this, VanillaTilt);\r\n\r\n    if (!(element instanceof Node)) {\r\n      throw \"Can't initialize VanillaTilt because \" + element + \" is not a Node.\";\r\n    }\r\n\r\n    this.width = null;\r\n    this.height = null;\r\n    this.left = null;\r\n    this.top = null;\r\n    this.transitionTimeout = null;\r\n    this.updateCall = null;\r\n\r\n    this.updateBind = this.update.bind(this);\r\n    this.resetBind = this.reset.bind(this);\r\n\r\n    this.element = element;\r\n    this.settings = this.extendSettings(settings);\r\n    this.elementListener = this.getElementListener();\r\n\r\n    this.reverse = this.settings.reverse ? -1 : 1;\r\n\r\n    this.glare = this.isSettingTrue(this.settings.glare);\r\n    this.glarePrerender = this.isSettingTrue(this.settings[\"glare-prerender\"]);\r\n    this.fullPageListening = this.isSettingTrue(this.settings[\"full-page-listening\"]);\r\n    this.gyroscope = this.isSettingTrue(this.settings.gyroscope);\r\n\r\n    if (this.glare) {\r\n      this.prepareGlare();\r\n    }\r\n\r\n    this.addEventListeners();\r\n  }\r\n\r\n  VanillaTilt.prototype.isSettingTrue = function isSettingTrue(setting) {\r\n    return setting === \"\" || setting === true || setting === 1;\r\n  };\r\n\r\n  /**\r\n   * Method returns element what will be listen mouse events\r\n   * @return {Node}\r\n   */\r\n\r\n\r\n  VanillaTilt.prototype.getElementListener = function getElementListener() {\r\n    if (!this.settings || !this.settings[\"mouse-event-element\"]) {\r\n      return this.element;\r\n    }\r\n\r\n    if (typeof this.settings[\"mouse-event-element\"] === \"string\") {\r\n      var mouseEventElement = document.querySelector(this.settings[\"mouse-event-element\"]);\r\n\r\n      if (mouseEventElement) {\r\n        return mouseEventElement;\r\n      }\r\n    }\r\n\r\n    if (this.settings[\"mouse-event-element\"] instanceof Node) {\r\n      return this.settings[\"mouse-event-element\"];\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Method set listen methods for this.elementListener\r\n   * @return {Node}\r\n   */\r\n\r\n\r\n  VanillaTilt.prototype.addEventListeners = function addEventListeners() {\r\n    this.onMouseEnterBind = this.onMouseEnter.bind(this);\r\n    this.onMouseMoveBind = this.onMouseMove.bind(this);\r\n    this.onMouseLeaveBind = this.onMouseLeave.bind(this);\r\n    this.onWindowResizeBind = this.onWindowResize.bind(this);\r\n    this.onDeviceOrientationBind = this.onDeviceOrientation.bind(this);\r\n\r\n    this.elementListener.addEventListener(\"mouseenter\", this.onMouseEnterBind);\r\n    this.elementListener.addEventListener(\"mouseleave\", this.onMouseLeaveBind);\r\n\r\n    if (this.fullPageListening) {\r\n      window.document.addEventListener(\"mousemove\", this.onMouseMoveBind);\r\n    } else {\r\n      this.elementListener.addEventListener(\"mousemove\", this.onMouseMoveBind);\r\n    }\r\n\r\n    if (this.glare) {\r\n      window.addEventListener(\"resize\", this.onWindowResizeBind);\r\n    }\r\n\r\n    if (this.gyroscope) {\r\n      window.addEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Method remove event listeners from current this.elementListener\r\n   */\r\n\r\n\r\n  VanillaTilt.prototype.removeEventListeners = function removeEventListeners() {\r\n    this.elementListener.removeEventListener(\"mouseenter\", this.onMouseEnterBind);\r\n    this.elementListener.removeEventListener(\"mouseleave\", this.onMouseLeaveBind);\r\n\r\n    if (this.fullPageListening) {\r\n      window.document.removeEventListener(\"mousemove\", this.onMouseMoveBind);\r\n    } else {\r\n      this.elementListener.removeEventListener(\"mousemove\", this.onMouseMoveBind);\r\n    }\r\n\r\n    if (this.gyroscope) {\r\n      window.removeEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\r\n    }\r\n\r\n    if (this.glare) {\r\n      window.removeEventListener(\"resize\", this.onWindowResizeBind);\r\n    }\r\n  };\r\n\r\n  VanillaTilt.prototype.destroy = function destroy() {\r\n    clearTimeout(this.transitionTimeout);\r\n    if (this.updateCall !== null) {\r\n      cancelAnimationFrame(this.updateCall);\r\n    }\r\n\r\n    this.reset();\r\n\r\n    this.removeEventListeners();\r\n    this.element.vanillaTilt = null;\r\n    delete this.element.vanillaTilt;\r\n\r\n    this.element = null;\r\n  };\r\n\r\n  VanillaTilt.prototype.onDeviceOrientation = function onDeviceOrientation(event) {\r\n    if (event.gamma === null || event.beta === null) {\r\n      return;\r\n    }\r\n\r\n    this.updateElementPosition();\r\n\r\n    var totalAngleX = this.settings.gyroscopeMaxAngleX - this.settings.gyroscopeMinAngleX;\r\n    var totalAngleY = this.settings.gyroscopeMaxAngleY - this.settings.gyroscopeMinAngleY;\r\n\r\n    var degreesPerPixelX = totalAngleX / this.width;\r\n    var degreesPerPixelY = totalAngleY / this.height;\r\n\r\n    var angleX = event.gamma - this.settings.gyroscopeMinAngleX;\r\n    var angleY = event.beta - this.settings.gyroscopeMinAngleY;\r\n\r\n    var posX = angleX / degreesPerPixelX;\r\n    var posY = angleY / degreesPerPixelY;\r\n\r\n    if (this.updateCall !== null) {\r\n      cancelAnimationFrame(this.updateCall);\r\n    }\r\n\r\n    this.event = {\r\n      clientX: posX + this.left,\r\n      clientY: posY + this.top\r\n    };\r\n\r\n    this.updateCall = requestAnimationFrame(this.updateBind);\r\n  };\r\n\r\n  VanillaTilt.prototype.onMouseEnter = function onMouseEnter() {\r\n    this.updateElementPosition();\r\n    this.element.style.willChange = \"transform\";\r\n    this.setTransition();\r\n  };\r\n\r\n  VanillaTilt.prototype.onMouseMove = function onMouseMove(event) {\r\n    if (this.updateCall !== null) {\r\n      cancelAnimationFrame(this.updateCall);\r\n    }\r\n\r\n    this.event = event;\r\n    this.updateCall = requestAnimationFrame(this.updateBind);\r\n  };\r\n\r\n  VanillaTilt.prototype.onMouseLeave = function onMouseLeave() {\r\n    if (this.fullPageListening) {\r\n      return;\r\n    }\r\n\r\n    this.setTransition();\r\n\r\n    if (this.settings.reset) {\r\n      requestAnimationFrame(this.resetBind);\r\n    }\r\n  };\r\n\r\n  VanillaTilt.prototype.reset = function reset() {\r\n    this.event = {\r\n      pageX: this.left + this.width / 2,\r\n      pageY: this.top + this.height / 2\r\n    };\r\n\r\n    if (this.element && this.element.style) {\r\n      this.element.style.transform = \"perspective(\" + this.settings.perspective + \"px) \" + \"rotateX(0deg) \" + \"rotateY(0deg) \" + \"scale3d(1, 1, 1)\";\r\n    }\r\n\r\n    if (this.glare) {\r\n      this.glareElement.style.transform = \"rotate(180deg) translate(-50%, -50%)\";\r\n      this.glareElement.style.opacity = \"0\";\r\n    }\r\n  };\r\n\r\n  VanillaTilt.prototype.getValues = function getValues() {\r\n    if (this.fullPageListening) {\r\n      var x = this.event.clientX / document.body.clientWidth;\r\n      var y = this.event.clientY / document.body.clientHeight;\r\n    } else {\r\n      var x = (this.event.clientX - this.left) / this.width;\r\n      var y = (this.event.clientY - this.top) / this.height;\r\n    }\r\n\r\n    x = Math.min(Math.max(x, 0), 1);\r\n    y = Math.min(Math.max(y, 0), 1);\r\n\r\n    var tiltX = (this.reverse * (this.settings.max / 2 - x * this.settings.max)).toFixed(2);\r\n    var tiltY = (this.reverse * (y * this.settings.max - this.settings.max / 2)).toFixed(2);\r\n    var angle = Math.atan2(this.event.clientX - (this.left + this.width / 2), -(this.event.clientY - (this.top + this.height / 2))) * (180 / Math.PI);\r\n\r\n    return {\r\n      tiltX: tiltX,\r\n      tiltY: tiltY,\r\n      percentageX: x * 100,\r\n      percentageY: y * 100,\r\n      angle: angle\r\n    };\r\n  };\r\n\r\n  VanillaTilt.prototype.updateElementPosition = function updateElementPosition() {\r\n    var rect = this.element.getBoundingClientRect();\r\n\r\n    this.width = this.element.offsetWidth;\r\n    this.height = this.element.offsetHeight;\r\n    this.left = rect.left;\r\n    this.top = rect.top;\r\n  };\r\n\r\n  VanillaTilt.prototype.update = function update() {\r\n    var values = this.getValues();\r\n\r\n    this.element.style.transform = \"perspective(\" + this.settings.perspective + \"px) \" + \"rotateX(\" + (this.settings.axis === \"x\" ? 0 : values.tiltY) + \"deg) \" + \"rotateY(\" + (this.settings.axis === \"y\" ? 0 : values.tiltX) + \"deg) \" + \"scale3d(\" + this.settings.scale + \", \" + this.settings.scale + \", \" + this.settings.scale + \")\";\r\n\r\n    if (this.glare) {\r\n      this.glareElement.style.transform = \"rotate(\" + values.angle + \"deg) translate(-50%, -50%)\";\r\n      this.glareElement.style.opacity = \"\" + values.percentageY * this.settings[\"max-glare\"] / 100;\r\n    }\r\n\r\n    this.element.dispatchEvent(new CustomEvent(\"tiltChange\", {\r\n      \"detail\": values\r\n    }));\r\n\r\n    this.updateCall = null;\r\n  };\r\n\r\n  /**\r\n   * Appends the glare element (if glarePrerender equals false)\r\n   * and sets the default style\r\n   */\r\n\r\n\r\n  VanillaTilt.prototype.prepareGlare = function prepareGlare() {\r\n    // If option pre-render is enabled we assume all html/css is present for an optimal glare effect.\r\n    if (!this.glarePrerender) {\r\n      // Create glare element\r\n      var jsTiltGlare = document.createElement(\"div\");\r\n      jsTiltGlare.classList.add(\"js-tilt-glare\");\r\n\r\n      var jsTiltGlareInner = document.createElement(\"div\");\r\n      jsTiltGlareInner.classList.add(\"js-tilt-glare-inner\");\r\n\r\n      jsTiltGlare.appendChild(jsTiltGlareInner);\r\n      this.element.appendChild(jsTiltGlare);\r\n    }\r\n\r\n    this.glareElementWrapper = this.element.querySelector(\".js-tilt-glare\");\r\n    this.glareElement = this.element.querySelector(\".js-tilt-glare-inner\");\r\n\r\n    if (this.glarePrerender) {\r\n      return;\r\n    }\r\n\r\n    Object.assign(this.glareElementWrapper.style, {\r\n      \"position\": \"absolute\",\r\n      \"top\": \"0\",\r\n      \"left\": \"0\",\r\n      \"width\": \"100%\",\r\n      \"height\": \"100%\",\r\n      \"overflow\": \"hidden\",\r\n      \"pointer-events\": \"none\"\r\n    });\r\n\r\n    Object.assign(this.glareElement.style, {\r\n      \"position\": \"absolute\",\r\n      \"top\": \"50%\",\r\n      \"left\": \"50%\",\r\n      \"pointer-events\": \"none\",\r\n      \"background-image\": \"linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)\",\r\n      \"width\": this.element.offsetWidth * 2 + \"px\",\r\n      \"height\": this.element.offsetWidth * 2 + \"px\",\r\n      \"transform\": \"rotate(180deg) translate(-50%, -50%)\",\r\n      \"transform-origin\": \"0% 0%\",\r\n      \"opacity\": \"0\"\r\n    });\r\n  };\r\n\r\n  VanillaTilt.prototype.updateGlareSize = function updateGlareSize() {\r\n    Object.assign(this.glareElement.style, {\r\n      \"width\": \"\" + this.element.offsetWidth * 2,\r\n      \"height\": \"\" + this.element.offsetWidth * 2\r\n    });\r\n  };\r\n\r\n  VanillaTilt.prototype.onWindowResize = function onWindowResize() {\r\n    this.updateGlareSize();\r\n  };\r\n\r\n  VanillaTilt.prototype.setTransition = function setTransition() {\r\n    var _this = this;\r\n\r\n    clearTimeout(this.transitionTimeout);\r\n    this.element.style.transition = this.settings.speed + \"ms \" + this.settings.easing;\r\n    if (this.glare) this.glareElement.style.transition = \"opacity \" + this.settings.speed + \"ms \" + this.settings.easing;\r\n\r\n    this.transitionTimeout = setTimeout(function () {\r\n      _this.element.style.transition = \"\";\r\n      if (_this.glare) {\r\n        _this.glareElement.style.transition = \"\";\r\n      }\r\n    }, this.settings.speed);\r\n  };\r\n\r\n  /**\r\n   * Method return patched settings of instance\r\n   * @param {boolean} settings.reverse - reverse the tilt direction\r\n   * @param {number} settings.max - max tilt rotation (degrees)\r\n   * @param {number} settings.perspective - Transform perspective, the lower the more extreme the tilt gets\r\n   * @param {string} settings.easing - Easing on enter/exit\r\n   * @param {number} settings.scale - 2 = 200%, 1.5 = 150%, etc..\r\n   * @param {number} settings.speed - Speed of the enter/exit transition\r\n   * @param {boolean} settings.transition - Set a transition on enter/exit\r\n   * @param settings.axis - What axis should be disabled. Can be X or Y\r\n   * @param {boolean} settings.glare - What axis should be disabled. Can be X or Y\r\n   * @param {number} settings.max-glare - the maximum \"glare\" opacity (1 = 100%, 0.5 = 50%)\r\n   * @param {boolean} settings.glare-prerender - false = VanillaTilt creates the glare elements for you, otherwise\r\n   * @param {string|object} settings.mouse-event-element - String selector or link to HTML-element what will be listen mouse events\r\n   * @param {boolean} settings.reset - false = If the tilt effect has to be reset on exit\r\n   * @param {gyroscope} settings.gyroscope - Enable tilting by deviceorientation events\r\n   * @param {gyroscopeSensitivity} settings.gyroscopeSensitivity - Between 0 and 1 - The angle at which max tilt position is reached. 1 = 90deg, 0.5 = 45deg, etc..\r\n   */\r\n\r\n\r\n  VanillaTilt.prototype.extendSettings = function extendSettings(settings) {\r\n    var defaultSettings = {\r\n      reverse: false,\r\n      max: 35,\r\n      perspective: 1000,\r\n      easing: \"cubic-bezier(.03,.98,.52,.99)\",\r\n      scale: 1,\r\n      speed: 300,\r\n      transition: true,\r\n      axis: null,\r\n      glare: false,\r\n      \"max-glare\": 1,\r\n      \"glare-prerender\": false,\r\n      \"full-page-listening\": false,\r\n      \"mouse-event-element\": null,\r\n      reset: true,\r\n      gyroscope: true,\r\n      gyroscopeMinAngleX: -45,\r\n      gyroscopeMaxAngleX: 45,\r\n      gyroscopeMinAngleY: -45,\r\n      gyroscopeMaxAngleY: 45\r\n    };\r\n\r\n    var newSettings = {};\r\n    for (var property in defaultSettings) {\r\n      if (property in settings) {\r\n        newSettings[property] = settings[property];\r\n      } else if (this.element.hasAttribute(\"data-tilt-\" + property)) {\r\n        var attribute = this.element.getAttribute(\"data-tilt-\" + property);\r\n        try {\r\n          newSettings[property] = JSON.parse(attribute);\r\n        } catch (e) {\r\n          newSettings[property] = attribute;\r\n        }\r\n      } else {\r\n        newSettings[property] = defaultSettings[property];\r\n      }\r\n    }\r\n\r\n    return newSettings;\r\n  };\r\n\r\n  VanillaTilt.init = function init(elements, settings) {\r\n    if (elements instanceof Node) {\r\n      elements = [elements];\r\n    }\r\n\r\n    if (elements instanceof NodeList) {\r\n      elements = [].slice.call(elements);\r\n    }\r\n\r\n    if (!(elements instanceof Array)) {\r\n      return;\r\n    }\r\n\r\n    elements.forEach(function (element) {\r\n      if (!(\"vanillaTilt\" in element)) {\r\n        element.vanillaTilt = new VanillaTilt(element, settings);\r\n      }\r\n    });\r\n  };\r\n\r\n  return VanillaTilt;\r\n}();\r\n\r\nif (typeof document !== \"undefined\") {\r\n  /* expose the class to window */\r\n  window.VanillaTilt = VanillaTilt;\r\n\r\n  /**\r\n   * Auto load\r\n   */\r\n  VanillaTilt.init(document.querySelectorAll(\"[data-tilt]\"));\r\n}\r\n\r\nmodule.exports = VanillaTilt;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lib/vanilla-tilt.js	(revision 7dddcf950b75f7c2e2a90d59473a49f52dd1721a)
+++ lib/vanilla-tilt.js	(date 1555098296635)
@@ -26,6 +26,13 @@
     this.height = null;
     this.left = null;
     this.top = null;
+
+    this.gammazero = null;
+    this.betazero = null;
+    this.lastgammazero = null;
+    this.lastbetazero = null;
+    this.oriented = 60;
+
     this.transitionTimeout = null;
     this.updateCall = null;
 
@@ -155,14 +162,27 @@
 
     this.updateElementPosition();
 
+    if (this.oriented > 0) {
+      this.lastgammazero = this.gammazero;
+      this.lastbetazero = this.betazero;
+      if (this.gammazero == null) {
+        this.gammazero = event.gamma;
+        this.betazero = event.beta;
+      } else {
+        this.gammazero = (event.gamma + this.lastgammazero) / 2;
+        this.betazero = (event.beta + this.lastbetazero) / 2;
+      }
+      this.oriented -= 1;
+    }
+
     var totalAngleX = this.settings.gyroscopeMaxAngleX - this.settings.gyroscopeMinAngleX;
     var totalAngleY = this.settings.gyroscopeMaxAngleY - this.settings.gyroscopeMinAngleY;
 
     var degreesPerPixelX = totalAngleX / this.width;
     var degreesPerPixelY = totalAngleY / this.height;
 
-    var angleX = event.gamma - this.settings.gyroscopeMinAngleX;
-    var angleY = event.beta - this.settings.gyroscopeMinAngleY;
+    var angleX = event.gamma - (this.settings.gyroscopeMinAngleX + this.gammazero);
+    var angleY = event.beta - (this.settings.gyroscopeMinAngleY + this.betazero);
 
     var posX = angleX / degreesPerPixelX;
     var posY = angleY / degreesPerPixelY;
Index: lib/vanilla-tilt.es2015.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\r\n * Created by È˜andor Sergiu (micku7zu) on 1/27/2017.\r\n * Original idea: https://github.com/gijsroge/tilt.js\r\n * MIT License.\r\n * Version 1.6.1\r\n */\r\n\r\nclass VanillaTilt {\r\n  constructor(element, settings = {}) {\r\n    if (!(element instanceof Node)) {\r\n      throw (\"Can't initialize VanillaTilt because \" + element + \" is not a Node.\");\r\n    }\r\n\r\n    this.width = null;\r\n    this.height = null;\r\n    this.left = null;\r\n    this.top = null;\r\n    this.transitionTimeout = null;\r\n    this.updateCall = null;\r\n\r\n    this.updateBind = this.update.bind(this);\r\n    this.resetBind = this.reset.bind(this);\r\n\r\n    this.element = element;\r\n    this.settings = this.extendSettings(settings);\r\n    this.elementListener = this.getElementListener();\r\n\r\n    this.reverse = this.settings.reverse ? -1 : 1;\r\n\r\n    this.glare = this.isSettingTrue(this.settings.glare);\r\n    this.glarePrerender = this.isSettingTrue(this.settings[\"glare-prerender\"]);\r\n    this.fullPageListening = this.isSettingTrue(this.settings[\"full-page-listening\"]);\r\n    this.gyroscope = this.isSettingTrue(this.settings.gyroscope);\r\n\r\n    if (this.glare) {\r\n      this.prepareGlare();\r\n    }\r\n\r\n    this.addEventListeners();\r\n  }\r\n\r\n  isSettingTrue(setting) {\r\n    return setting === \"\" || setting === true || setting === 1;\r\n  }\r\n\r\n  /**\r\n   * Method returns element what will be listen mouse events\r\n   * @return {Node}\r\n   */\r\n  getElementListener() {\r\n    if (!this.settings || !this.settings[\"mouse-event-element\"]) {\r\n      return this.element;\r\n    }\r\n\r\n    if (typeof this.settings[\"mouse-event-element\"] === \"string\") {\r\n      const mouseEventElement = document.querySelector(this.settings[\"mouse-event-element\"]);\r\n\r\n      if (mouseEventElement) {\r\n        return mouseEventElement;\r\n      }\r\n    }\r\n\r\n    if (this.settings[\"mouse-event-element\"] instanceof Node) {\r\n      return this.settings[\"mouse-event-element\"];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method set listen methods for this.elementListener\r\n   * @return {Node}\r\n   */\r\n  addEventListeners() {\r\n    this.onMouseEnterBind = this.onMouseEnter.bind(this);\r\n    this.onMouseMoveBind = this.onMouseMove.bind(this);\r\n    this.onMouseLeaveBind = this.onMouseLeave.bind(this);\r\n    this.onWindowResizeBind = this.onWindowResize.bind(this);\r\n    this.onDeviceOrientationBind = this.onDeviceOrientation.bind(this);\r\n\r\n    this.elementListener.addEventListener(\"mouseenter\", this.onMouseEnterBind);\r\n    this.elementListener.addEventListener(\"mouseleave\", this.onMouseLeaveBind);\r\n\r\n    if (this.fullPageListening) {\r\n        window.document.addEventListener(\"mousemove\", this.onMouseMoveBind);\r\n    } else {\r\n        this.elementListener.addEventListener(\"mousemove\", this.onMouseMoveBind);\r\n    }\r\n\r\n    if (this.glare) {\r\n      window.addEventListener(\"resize\", this.onWindowResizeBind);\r\n    }\r\n\r\n    if (this.gyroscope) {\r\n      window.addEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method remove event listeners from current this.elementListener\r\n   */\r\n  removeEventListeners() {\r\n    this.elementListener.removeEventListener(\"mouseenter\", this.onMouseEnterBind);\r\n    this.elementListener.removeEventListener(\"mouseleave\", this.onMouseLeaveBind);\r\n\r\n    if (this.fullPageListening) {\r\n        window.document.removeEventListener(\"mousemove\", this.onMouseMoveBind);\r\n    } else {\r\n        this.elementListener.removeEventListener(\"mousemove\", this.onMouseMoveBind);\r\n    }\r\n\r\n    if (this.gyroscope) {\r\n      window.removeEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\r\n    }\r\n\r\n    if (this.glare) {\r\n      window.removeEventListener(\"resize\", this.onWindowResizeBind);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    clearTimeout(this.transitionTimeout);\r\n    if (this.updateCall !== null) {\r\n      cancelAnimationFrame(this.updateCall);\r\n    }\r\n\r\n    this.reset();\r\n\r\n    this.removeEventListeners();\r\n    this.element.vanillaTilt = null;\r\n    delete this.element.vanillaTilt;\r\n\r\n    this.element = null;\r\n  }\r\n\r\n  onDeviceOrientation(event) {\r\n    if (event.gamma === null || event.beta === null) {\r\n      return;\r\n    }\r\n\r\n    this.updateElementPosition();\r\n\r\n    const totalAngleX = this.settings.gyroscopeMaxAngleX - this.settings.gyroscopeMinAngleX;\r\n    const totalAngleY = this.settings.gyroscopeMaxAngleY - this.settings.gyroscopeMinAngleY;\r\n\r\n    const degreesPerPixelX = totalAngleX / this.width;\r\n    const degreesPerPixelY = totalAngleY / this.height;\r\n\r\n    const angleX = event.gamma - this.settings.gyroscopeMinAngleX;\r\n    const angleY = event.beta - this.settings.gyroscopeMinAngleY;\r\n\r\n    const posX = angleX / degreesPerPixelX;\r\n    const posY = angleY / degreesPerPixelY;\r\n\r\n    if (this.updateCall !== null) {\r\n      cancelAnimationFrame(this.updateCall);\r\n    }\r\n\r\n    this.event = {\r\n      clientX: posX + this.left,\r\n      clientY: posY + this.top,\r\n    };\r\n\r\n    this.updateCall = requestAnimationFrame(this.updateBind);\r\n  }\r\n\r\n  onMouseEnter() {\r\n    this.updateElementPosition();\r\n    this.element.style.willChange = \"transform\";\r\n    this.setTransition();\r\n  }\r\n\r\n  onMouseMove(event) {\r\n    if (this.updateCall !== null) {\r\n      cancelAnimationFrame(this.updateCall);\r\n    }\r\n\r\n    this.event = event;\r\n    this.updateCall = requestAnimationFrame(this.updateBind);\r\n  }\r\n\r\n  onMouseLeave() {\r\n    if (this.fullPageListening) { return; }\r\n\r\n    this.setTransition();\r\n\r\n    if (this.settings.reset) {\r\n      requestAnimationFrame(this.resetBind);\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.event = {\r\n      pageX: this.left + this.width / 2,\r\n      pageY: this.top + this.height / 2\r\n    };\r\n\r\n    if (this.element && this.element.style) {\r\n      this.element.style.transform = `perspective(${this.settings.perspective}px) ` +\r\n        `rotateX(0deg) ` +\r\n        `rotateY(0deg) ` +\r\n        `scale3d(1, 1, 1)`;\r\n    }\r\n\r\n    if (this.glare) {\r\n      this.glareElement.style.transform = \"rotate(180deg) translate(-50%, -50%)\";\r\n      this.glareElement.style.opacity = \"0\";\r\n    }\r\n  }\r\n\r\n  getValues() {\r\n    if (this.fullPageListening) {\r\n        var x = this.event.clientX / document.body.clientWidth;\r\n        var y = this.event.clientY / document.body.clientHeight;\r\n    } else {\r\n        var x = (this.event.clientX - this.left) / this.width;\r\n        var y = (this.event.clientY - this.top) / this.height;\r\n    }\r\n\r\n    x = Math.min(Math.max(x, 0), 1);\r\n    y = Math.min(Math.max(y, 0), 1);\r\n\r\n    let tiltX = (this.reverse * (this.settings.max / 2 - x * this.settings.max)).toFixed(2);\r\n    let tiltY = (this.reverse * (y * this.settings.max - this.settings.max / 2)).toFixed(2);\r\n    let angle = Math.atan2(this.event.clientX - (this.left + this.width / 2), -(this.event.clientY - (this.top + this.height / 2))) * (180 / Math.PI);\r\n\r\n    return {\r\n      tiltX: tiltX,\r\n      tiltY: tiltY,\r\n      percentageX: x * 100,\r\n      percentageY: y * 100,\r\n      angle: angle\r\n    };\r\n  }\r\n\r\n  updateElementPosition() {\r\n    let rect = this.element.getBoundingClientRect();\r\n\r\n    this.width = this.element.offsetWidth;\r\n    this.height = this.element.offsetHeight;\r\n    this.left = rect.left;\r\n    this.top = rect.top;\r\n  }\r\n\r\n  update() {\r\n    let values = this.getValues();\r\n\r\n    this.element.style.transform = \"perspective(\" + this.settings.perspective + \"px) \" +\r\n      \"rotateX(\" + (this.settings.axis === \"x\" ? 0 : values.tiltY) + \"deg) \" +\r\n      \"rotateY(\" + (this.settings.axis === \"y\" ? 0 : values.tiltX) + \"deg) \" +\r\n      \"scale3d(\" + this.settings.scale + \", \" + this.settings.scale + \", \" + this.settings.scale + \")\";\r\n\r\n    if (this.glare) {\r\n      this.glareElement.style.transform = `rotate(${values.angle}deg) translate(-50%, -50%)`;\r\n      this.glareElement.style.opacity = `${values.percentageY * this.settings[\"max-glare\"] / 100}`;\r\n    }\r\n\r\n    this.element.dispatchEvent(new CustomEvent(\"tiltChange\", {\r\n      \"detail\": values\r\n    }));\r\n\r\n    this.updateCall = null;\r\n  }\r\n\r\n  /**\r\n   * Appends the glare element (if glarePrerender equals false)\r\n   * and sets the default style\r\n   */\r\n  prepareGlare() {\r\n    // If option pre-render is enabled we assume all html/css is present for an optimal glare effect.\r\n    if (!this.glarePrerender) {\r\n      // Create glare element\r\n      const jsTiltGlare = document.createElement(\"div\");\r\n      jsTiltGlare.classList.add(\"js-tilt-glare\");\r\n\r\n      const jsTiltGlareInner = document.createElement(\"div\");\r\n      jsTiltGlareInner.classList.add(\"js-tilt-glare-inner\");\r\n\r\n      jsTiltGlare.appendChild(jsTiltGlareInner);\r\n      this.element.appendChild(jsTiltGlare);\r\n    }\r\n\r\n    this.glareElementWrapper = this.element.querySelector(\".js-tilt-glare\");\r\n    this.glareElement = this.element.querySelector(\".js-tilt-glare-inner\");\r\n\r\n    if (this.glarePrerender) {\r\n      return;\r\n    }\r\n\r\n    Object.assign(this.glareElementWrapper.style, {\r\n      \"position\": \"absolute\",\r\n      \"top\": \"0\",\r\n      \"left\": \"0\",\r\n      \"width\": \"100%\",\r\n      \"height\": \"100%\",\r\n      \"overflow\": \"hidden\",\r\n      \"pointer-events\": \"none\"\r\n    });\r\n\r\n    Object.assign(this.glareElement.style, {\r\n      \"position\": \"absolute\",\r\n      \"top\": \"50%\",\r\n      \"left\": \"50%\",\r\n      \"pointer-events\": \"none\",\r\n      \"background-image\": `linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)`,\r\n      \"width\": `${this.element.offsetWidth * 2}px`,\r\n      \"height\": `${this.element.offsetWidth * 2}px`,\r\n      \"transform\": \"rotate(180deg) translate(-50%, -50%)\",\r\n      \"transform-origin\": \"0% 0%\",\r\n      \"opacity\": \"0\",\r\n    });\r\n  }\r\n\r\n  updateGlareSize() {\r\n    Object.assign(this.glareElement.style, {\r\n      \"width\": `${this.element.offsetWidth * 2}`,\r\n      \"height\": `${this.element.offsetWidth * 2}`,\r\n    });\r\n  }\r\n\r\n  onWindowResize() {\r\n    this.updateGlareSize();\r\n  }\r\n\r\n  setTransition() {\r\n    clearTimeout(this.transitionTimeout);\r\n    this.element.style.transition = this.settings.speed + \"ms \" + this.settings.easing;\r\n    if (this.glare) this.glareElement.style.transition = `opacity ${this.settings.speed}ms ${this.settings.easing}`;\r\n\r\n    this.transitionTimeout = setTimeout(() => {\r\n      this.element.style.transition = \"\";\r\n      if (this.glare) {\r\n        this.glareElement.style.transition = \"\";\r\n      }\r\n    }, this.settings.speed);\r\n\r\n  }\r\n\r\n  /**\r\n   * Method return patched settings of instance\r\n   * @param {boolean} settings.reverse - reverse the tilt direction\r\n   * @param {number} settings.max - max tilt rotation (degrees)\r\n   * @param {number} settings.perspective - Transform perspective, the lower the more extreme the tilt gets\r\n   * @param {string} settings.easing - Easing on enter/exit\r\n   * @param {number} settings.scale - 2 = 200%, 1.5 = 150%, etc..\r\n   * @param {number} settings.speed - Speed of the enter/exit transition\r\n   * @param {boolean} settings.transition - Set a transition on enter/exit\r\n   * @param settings.axis - What axis should be disabled. Can be X or Y\r\n   * @param {boolean} settings.glare - What axis should be disabled. Can be X or Y\r\n   * @param {number} settings.max-glare - the maximum \"glare\" opacity (1 = 100%, 0.5 = 50%)\r\n   * @param {boolean} settings.glare-prerender - false = VanillaTilt creates the glare elements for you, otherwise\r\n   * @param {string|object} settings.mouse-event-element - String selector or link to HTML-element what will be listen mouse events\r\n   * @param {boolean} settings.reset - false = If the tilt effect has to be reset on exit\r\n   * @param {gyroscope} settings.gyroscope - Enable tilting by deviceorientation events\r\n   * @param {gyroscopeSensitivity} settings.gyroscopeSensitivity - Between 0 and 1 - The angle at which max tilt position is reached. 1 = 90deg, 0.5 = 45deg, etc..\r\n   */\r\n  extendSettings(settings) {\r\n    let defaultSettings = {\r\n      reverse: false,\r\n      max: 35,\r\n      perspective: 1000,\r\n      easing: \"cubic-bezier(.03,.98,.52,.99)\",\r\n      scale: 1,\r\n      speed: 300,\r\n      transition: true,\r\n      axis: null,\r\n      glare: false,\r\n      \"max-glare\": 1,\r\n      \"glare-prerender\": false,\r\n      \"full-page-listening\": false,\r\n      \"mouse-event-element\": null,\r\n      reset: true,\r\n      gyroscope: true,\r\n      gyroscopeMinAngleX: -45,\r\n      gyroscopeMaxAngleX: 45,\r\n      gyroscopeMinAngleY: -45,\r\n      gyroscopeMaxAngleY: 45,\r\n    };\r\n\r\n    let newSettings = {};\r\n    for (var property in defaultSettings) {\r\n      if (property in settings) {\r\n        newSettings[property] = settings[property];\r\n      } else if (this.element.hasAttribute(\"data-tilt-\" + property)) {\r\n        let attribute = this.element.getAttribute(\"data-tilt-\" + property);\r\n        try {\r\n          newSettings[property] = JSON.parse(attribute);\r\n        } catch (e) {\r\n          newSettings[property] = attribute;\r\n        }\r\n\r\n      } else {\r\n        newSettings[property] = defaultSettings[property];\r\n      }\r\n    }\r\n\r\n    return newSettings;\r\n  }\r\n\r\n  static init(elements, settings) {\r\n    if (elements instanceof Node) {\r\n      elements = [elements];\r\n    }\r\n\r\n    if (elements instanceof NodeList) {\r\n      elements = [].slice.call(elements);\r\n    }\r\n\r\n    if (!(elements instanceof Array)) {\r\n      return;\r\n    }\r\n\r\n    elements.forEach((element) => {\r\n      if (!(\"vanillaTilt\" in element)) {\r\n        element.vanillaTilt = new VanillaTilt(element, settings);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nif (typeof document !== \"undefined\") {\r\n  /* expose the class to window */\r\n  window.VanillaTilt = VanillaTilt;\r\n\r\n  /**\r\n   * Auto load\r\n   */\r\n  VanillaTilt.init(document.querySelectorAll(\"[data-tilt]\"));\r\n}\r\n\r\nexport default VanillaTilt;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lib/vanilla-tilt.es2015.js	(revision 7dddcf950b75f7c2e2a90d59473a49f52dd1721a)
+++ lib/vanilla-tilt.es2015.js	(date 1555098296635)
@@ -15,6 +15,13 @@
     this.height = null;
     this.left = null;
     this.top = null;
+
+    this.gammazero = null;
+    this.betazero = null;
+    this.lastgammazero = null;
+    this.lastbetazero = null;
+    this.oriented = 60;
+
     this.transitionTimeout = null;
     this.updateCall = null;
 
@@ -80,9 +87,9 @@
     this.elementListener.addEventListener("mouseleave", this.onMouseLeaveBind);
 
     if (this.fullPageListening) {
-        window.document.addEventListener("mousemove", this.onMouseMoveBind);
+      window.document.addEventListener("mousemove", this.onMouseMoveBind);
     } else {
-        this.elementListener.addEventListener("mousemove", this.onMouseMoveBind);
+      this.elementListener.addEventListener("mousemove", this.onMouseMoveBind);
     }
 
     if (this.glare) {
@@ -102,9 +109,9 @@
     this.elementListener.removeEventListener("mouseleave", this.onMouseLeaveBind);
 
     if (this.fullPageListening) {
-        window.document.removeEventListener("mousemove", this.onMouseMoveBind);
+      window.document.removeEventListener("mousemove", this.onMouseMoveBind);
     } else {
-        this.elementListener.removeEventListener("mousemove", this.onMouseMoveBind);
+      this.elementListener.removeEventListener("mousemove", this.onMouseMoveBind);
     }
 
     if (this.gyroscope) {
@@ -138,14 +145,27 @@
 
     this.updateElementPosition();
 
+    if (this.oriented > 0) {
+      this.lastgammazero = this.gammazero;
+      this.lastbetazero = this.betazero;
+      if (this.gammazero == null) {
+        this.gammazero = event.gamma;
+        this.betazero = event.beta;
+      } else {
+        this.gammazero = (event.gamma + this.lastgammazero) / 2;
+        this.betazero = (event.beta + this.lastbetazero) / 2;
+      }
+      this.oriented -= 1;
+    }
+
     const totalAngleX = this.settings.gyroscopeMaxAngleX - this.settings.gyroscopeMinAngleX;
     const totalAngleY = this.settings.gyroscopeMaxAngleY - this.settings.gyroscopeMinAngleY;
 
     const degreesPerPixelX = totalAngleX / this.width;
     const degreesPerPixelY = totalAngleY / this.height;
 
-    const angleX = event.gamma - this.settings.gyroscopeMinAngleX;
-    const angleY = event.beta - this.settings.gyroscopeMinAngleY;
+    const angleX = event.gamma - (this.settings.gyroscopeMinAngleX + this.gammazero);
+    const angleY = event.beta - (this.settings.gyroscopeMinAngleY + this.betazero);
 
     const posX = angleX / degreesPerPixelX;
     const posY = angleY / degreesPerPixelY;
@@ -178,7 +198,9 @@
   }
 
   onMouseLeave() {
-    if (this.fullPageListening) { return; }
+    if (this.fullPageListening) {
+      return;
+    }
 
     this.setTransition();
 
@@ -208,11 +230,11 @@
 
   getValues() {
     if (this.fullPageListening) {
-        var x = this.event.clientX / document.body.clientWidth;
-        var y = this.event.clientY / document.body.clientHeight;
+      var x = this.event.clientX / document.body.clientWidth;
+      var y = this.event.clientY / document.body.clientHeight;
     } else {
-        var x = (this.event.clientX - this.left) / this.width;
-        var y = (this.event.clientY - this.top) / this.height;
+      var x = (this.event.clientX - this.left) / this.width;
+      var y = (this.event.clientY - this.top) / this.height;
     }
 
     x = Math.min(Math.max(x, 0), 1);
Index: dist/vanilla-tilt.min.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>var VanillaTilt=function(){\"use strict\";class e{constructor(e,t={}){if(!(e instanceof Node))throw\"Can't initialize VanillaTilt because \"+e+\" is not a Node.\";this.width=null,this.height=null,this.left=null,this.top=null,this.transitionTimeout=null,this.updateCall=null,this.updateBind=this.update.bind(this),this.resetBind=this.reset.bind(this),this.element=e,this.settings=this.extendSettings(t),this.elementListener=this.getElementListener(),this.reverse=this.settings.reverse?-1:1,this.glare=this.isSettingTrue(this.settings.glare),this.glarePrerender=this.isSettingTrue(this.settings[\"glare-prerender\"]),this.fullPageListening=this.isSettingTrue(this.settings[\"full-page-listening\"]),this.gyroscope=this.isSettingTrue(this.settings.gyroscope),this.glare&&this.prepareGlare(),this.addEventListeners()}isSettingTrue(e){return\"\"===e||!0===e||1===e}getElementListener(){if(!this.settings||!this.settings[\"mouse-event-element\"])return this.element;if(\"string\"==typeof this.settings[\"mouse-event-element\"]){const e=document.querySelector(this.settings[\"mouse-event-element\"]);if(e)return e}return this.settings[\"mouse-event-element\"]instanceof Node?this.settings[\"mouse-event-element\"]:void 0}addEventListeners(){this.onMouseEnterBind=this.onMouseEnter.bind(this),this.onMouseMoveBind=this.onMouseMove.bind(this),this.onMouseLeaveBind=this.onMouseLeave.bind(this),this.onWindowResizeBind=this.onWindowResize.bind(this),this.onDeviceOrientationBind=this.onDeviceOrientation.bind(this),this.elementListener.addEventListener(\"mouseenter\",this.onMouseEnterBind),this.elementListener.addEventListener(\"mouseleave\",this.onMouseLeaveBind),this.fullPageListening?window.document.addEventListener(\"mousemove\",this.onMouseMoveBind):this.elementListener.addEventListener(\"mousemove\",this.onMouseMoveBind),this.glare&&window.addEventListener(\"resize\",this.onWindowResizeBind),this.gyroscope&&window.addEventListener(\"deviceorientation\",this.onDeviceOrientationBind)}removeEventListeners(){this.elementListener.removeEventListener(\"mouseenter\",this.onMouseEnterBind),this.elementListener.removeEventListener(\"mouseleave\",this.onMouseLeaveBind),this.fullPageListening?window.document.removeEventListener(\"mousemove\",this.onMouseMoveBind):this.elementListener.removeEventListener(\"mousemove\",this.onMouseMoveBind),this.gyroscope&&window.removeEventListener(\"deviceorientation\",this.onDeviceOrientationBind),this.glare&&window.removeEventListener(\"resize\",this.onWindowResizeBind)}destroy(){clearTimeout(this.transitionTimeout),null!==this.updateCall&&cancelAnimationFrame(this.updateCall),this.reset(),this.removeEventListeners(),this.element.vanillaTilt=null,delete this.element.vanillaTilt,this.element=null}onDeviceOrientation(e){if(null===e.gamma||null===e.beta)return;this.updateElementPosition();const t=this.settings.gyroscopeMaxAngleX-this.settings.gyroscopeMinAngleX,i=this.settings.gyroscopeMaxAngleY-this.settings.gyroscopeMinAngleY,s=t/this.width,n=i/this.height,l=(e.gamma-this.settings.gyroscopeMinAngleX)/s,a=(e.beta-this.settings.gyroscopeMinAngleY)/n;null!==this.updateCall&&cancelAnimationFrame(this.updateCall),this.event={clientX:l+this.left,clientY:a+this.top},this.updateCall=requestAnimationFrame(this.updateBind)}onMouseEnter(){this.updateElementPosition(),this.element.style.willChange=\"transform\",this.setTransition()}onMouseMove(e){null!==this.updateCall&&cancelAnimationFrame(this.updateCall),this.event=e,this.updateCall=requestAnimationFrame(this.updateBind)}onMouseLeave(){this.fullPageListening||(this.setTransition(),this.settings.reset&&requestAnimationFrame(this.resetBind))}reset(){this.event={pageX:this.left+this.width/2,pageY:this.top+this.height/2},this.element&&this.element.style&&(this.element.style.transform=`perspective(${this.settings.perspective}px) `+\"rotateX(0deg) rotateY(0deg) scale3d(1, 1, 1)\"),this.glare&&(this.glareElement.style.transform=\"rotate(180deg) translate(-50%, -50%)\",this.glareElement.style.opacity=\"0\")}getValues(){if(this.fullPageListening)var e=this.event.clientX/document.body.clientWidth,t=this.event.clientY/document.body.clientHeight;else e=(this.event.clientX-this.left)/this.width,t=(this.event.clientY-this.top)/this.height;return e=Math.min(Math.max(e,0),1),t=Math.min(Math.max(t,0),1),{tiltX:(this.reverse*(this.settings.max/2-e*this.settings.max)).toFixed(2),tiltY:(this.reverse*(t*this.settings.max-this.settings.max/2)).toFixed(2),percentageX:100*e,percentageY:100*t,angle:Math.atan2(this.event.clientX-(this.left+this.width/2),-(this.event.clientY-(this.top+this.height/2)))*(180/Math.PI)}}updateElementPosition(){let e=this.element.getBoundingClientRect();this.width=this.element.offsetWidth,this.height=this.element.offsetHeight,this.left=e.left,this.top=e.top}update(){let e=this.getValues();this.element.style.transform=\"perspective(\"+this.settings.perspective+\"px) rotateX(\"+(\"x\"===this.settings.axis?0:e.tiltY)+\"deg) rotateY(\"+(\"y\"===this.settings.axis?0:e.tiltX)+\"deg) scale3d(\"+this.settings.scale+\", \"+this.settings.scale+\", \"+this.settings.scale+\")\",this.glare&&(this.glareElement.style.transform=`rotate(${e.angle}deg) translate(-50%, -50%)`,this.glareElement.style.opacity=`${e.percentageY*this.settings[\"max-glare\"]/100}`),this.element.dispatchEvent(new CustomEvent(\"tiltChange\",{detail:e})),this.updateCall=null}prepareGlare(){if(!this.glarePrerender){const e=document.createElement(\"div\");e.classList.add(\"js-tilt-glare\");const t=document.createElement(\"div\");t.classList.add(\"js-tilt-glare-inner\"),e.appendChild(t),this.element.appendChild(e)}this.glareElementWrapper=this.element.querySelector(\".js-tilt-glare\"),this.glareElement=this.element.querySelector(\".js-tilt-glare-inner\"),this.glarePrerender||(Object.assign(this.glareElementWrapper.style,{position:\"absolute\",top:\"0\",left:\"0\",width:\"100%\",height:\"100%\",overflow:\"hidden\",\"pointer-events\":\"none\"}),Object.assign(this.glareElement.style,{position:\"absolute\",top:\"50%\",left:\"50%\",\"pointer-events\":\"none\",\"background-image\":\"linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)\",width:`${2*this.element.offsetWidth}px`,height:`${2*this.element.offsetWidth}px`,transform:\"rotate(180deg) translate(-50%, -50%)\",\"transform-origin\":\"0% 0%\",opacity:\"0\"}))}updateGlareSize(){Object.assign(this.glareElement.style,{width:`${2*this.element.offsetWidth}`,height:`${2*this.element.offsetWidth}`})}onWindowResize(){this.updateGlareSize()}setTransition(){clearTimeout(this.transitionTimeout),this.element.style.transition=this.settings.speed+\"ms \"+this.settings.easing,this.glare&&(this.glareElement.style.transition=`opacity ${this.settings.speed}ms ${this.settings.easing}`),this.transitionTimeout=setTimeout(()=>{this.element.style.transition=\"\",this.glare&&(this.glareElement.style.transition=\"\")},this.settings.speed)}extendSettings(e){let t={reverse:!1,max:35,perspective:1e3,easing:\"cubic-bezier(.03,.98,.52,.99)\",scale:1,speed:300,transition:!0,axis:null,glare:!1,\"max-glare\":1,\"glare-prerender\":!1,\"full-page-listening\":!1,\"mouse-event-element\":null,reset:!0,gyroscope:!0,gyroscopeMinAngleX:-45,gyroscopeMaxAngleX:45,gyroscopeMinAngleY:-45,gyroscopeMaxAngleY:45},i={};for(var s in t)if(s in e)i[s]=e[s];else if(this.element.hasAttribute(\"data-tilt-\"+s)){let e=this.element.getAttribute(\"data-tilt-\"+s);try{i[s]=JSON.parse(e)}catch(t){i[s]=e}}else i[s]=t[s];return i}static init(t,i){t instanceof Node&&(t=[t]),t instanceof NodeList&&(t=[].slice.call(t)),t instanceof Array&&t.forEach(t=>{\"vanillaTilt\"in t||(t.vanillaTilt=new e(t,i))})}}return\"undefined\"!=typeof document&&(window.VanillaTilt=e,e.init(document.querySelectorAll(\"[data-tilt]\"))),e}();
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- dist/vanilla-tilt.min.js	(revision 7dddcf950b75f7c2e2a90d59473a49f52dd1721a)
+++ dist/vanilla-tilt.min.js	(date 1555098296772)
@@ -1,1 +1,1 @@
-var VanillaTilt=function(){"use strict";class e{constructor(e,t={}){if(!(e instanceof Node))throw"Can't initialize VanillaTilt because "+e+" is not a Node.";this.width=null,this.height=null,this.left=null,this.top=null,this.transitionTimeout=null,this.updateCall=null,this.updateBind=this.update.bind(this),this.resetBind=this.reset.bind(this),this.element=e,this.settings=this.extendSettings(t),this.elementListener=this.getElementListener(),this.reverse=this.settings.reverse?-1:1,this.glare=this.isSettingTrue(this.settings.glare),this.glarePrerender=this.isSettingTrue(this.settings["glare-prerender"]),this.fullPageListening=this.isSettingTrue(this.settings["full-page-listening"]),this.gyroscope=this.isSettingTrue(this.settings.gyroscope),this.glare&&this.prepareGlare(),this.addEventListeners()}isSettingTrue(e){return""===e||!0===e||1===e}getElementListener(){if(!this.settings||!this.settings["mouse-event-element"])return this.element;if("string"==typeof this.settings["mouse-event-element"]){const e=document.querySelector(this.settings["mouse-event-element"]);if(e)return e}return this.settings["mouse-event-element"]instanceof Node?this.settings["mouse-event-element"]:void 0}addEventListeners(){this.onMouseEnterBind=this.onMouseEnter.bind(this),this.onMouseMoveBind=this.onMouseMove.bind(this),this.onMouseLeaveBind=this.onMouseLeave.bind(this),this.onWindowResizeBind=this.onWindowResize.bind(this),this.onDeviceOrientationBind=this.onDeviceOrientation.bind(this),this.elementListener.addEventListener("mouseenter",this.onMouseEnterBind),this.elementListener.addEventListener("mouseleave",this.onMouseLeaveBind),this.fullPageListening?window.document.addEventListener("mousemove",this.onMouseMoveBind):this.elementListener.addEventListener("mousemove",this.onMouseMoveBind),this.glare&&window.addEventListener("resize",this.onWindowResizeBind),this.gyroscope&&window.addEventListener("deviceorientation",this.onDeviceOrientationBind)}removeEventListeners(){this.elementListener.removeEventListener("mouseenter",this.onMouseEnterBind),this.elementListener.removeEventListener("mouseleave",this.onMouseLeaveBind),this.fullPageListening?window.document.removeEventListener("mousemove",this.onMouseMoveBind):this.elementListener.removeEventListener("mousemove",this.onMouseMoveBind),this.gyroscope&&window.removeEventListener("deviceorientation",this.onDeviceOrientationBind),this.glare&&window.removeEventListener("resize",this.onWindowResizeBind)}destroy(){clearTimeout(this.transitionTimeout),null!==this.updateCall&&cancelAnimationFrame(this.updateCall),this.reset(),this.removeEventListeners(),this.element.vanillaTilt=null,delete this.element.vanillaTilt,this.element=null}onDeviceOrientation(e){if(null===e.gamma||null===e.beta)return;this.updateElementPosition();const t=this.settings.gyroscopeMaxAngleX-this.settings.gyroscopeMinAngleX,i=this.settings.gyroscopeMaxAngleY-this.settings.gyroscopeMinAngleY,s=t/this.width,n=i/this.height,l=(e.gamma-this.settings.gyroscopeMinAngleX)/s,a=(e.beta-this.settings.gyroscopeMinAngleY)/n;null!==this.updateCall&&cancelAnimationFrame(this.updateCall),this.event={clientX:l+this.left,clientY:a+this.top},this.updateCall=requestAnimationFrame(this.updateBind)}onMouseEnter(){this.updateElementPosition(),this.element.style.willChange="transform",this.setTransition()}onMouseMove(e){null!==this.updateCall&&cancelAnimationFrame(this.updateCall),this.event=e,this.updateCall=requestAnimationFrame(this.updateBind)}onMouseLeave(){this.fullPageListening||(this.setTransition(),this.settings.reset&&requestAnimationFrame(this.resetBind))}reset(){this.event={pageX:this.left+this.width/2,pageY:this.top+this.height/2},this.element&&this.element.style&&(this.element.style.transform=`perspective(${this.settings.perspective}px) `+"rotateX(0deg) rotateY(0deg) scale3d(1, 1, 1)"),this.glare&&(this.glareElement.style.transform="rotate(180deg) translate(-50%, -50%)",this.glareElement.style.opacity="0")}getValues(){if(this.fullPageListening)var e=this.event.clientX/document.body.clientWidth,t=this.event.clientY/document.body.clientHeight;else e=(this.event.clientX-this.left)/this.width,t=(this.event.clientY-this.top)/this.height;return e=Math.min(Math.max(e,0),1),t=Math.min(Math.max(t,0),1),{tiltX:(this.reverse*(this.settings.max/2-e*this.settings.max)).toFixed(2),tiltY:(this.reverse*(t*this.settings.max-this.settings.max/2)).toFixed(2),percentageX:100*e,percentageY:100*t,angle:Math.atan2(this.event.clientX-(this.left+this.width/2),-(this.event.clientY-(this.top+this.height/2)))*(180/Math.PI)}}updateElementPosition(){let e=this.element.getBoundingClientRect();this.width=this.element.offsetWidth,this.height=this.element.offsetHeight,this.left=e.left,this.top=e.top}update(){let e=this.getValues();this.element.style.transform="perspective("+this.settings.perspective+"px) rotateX("+("x"===this.settings.axis?0:e.tiltY)+"deg) rotateY("+("y"===this.settings.axis?0:e.tiltX)+"deg) scale3d("+this.settings.scale+", "+this.settings.scale+", "+this.settings.scale+")",this.glare&&(this.glareElement.style.transform=`rotate(${e.angle}deg) translate(-50%, -50%)`,this.glareElement.style.opacity=`${e.percentageY*this.settings["max-glare"]/100}`),this.element.dispatchEvent(new CustomEvent("tiltChange",{detail:e})),this.updateCall=null}prepareGlare(){if(!this.glarePrerender){const e=document.createElement("div");e.classList.add("js-tilt-glare");const t=document.createElement("div");t.classList.add("js-tilt-glare-inner"),e.appendChild(t),this.element.appendChild(e)}this.glareElementWrapper=this.element.querySelector(".js-tilt-glare"),this.glareElement=this.element.querySelector(".js-tilt-glare-inner"),this.glarePrerender||(Object.assign(this.glareElementWrapper.style,{position:"absolute",top:"0",left:"0",width:"100%",height:"100%",overflow:"hidden","pointer-events":"none"}),Object.assign(this.glareElement.style,{position:"absolute",top:"50%",left:"50%","pointer-events":"none","background-image":"linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)",width:`${2*this.element.offsetWidth}px`,height:`${2*this.element.offsetWidth}px`,transform:"rotate(180deg) translate(-50%, -50%)","transform-origin":"0% 0%",opacity:"0"}))}updateGlareSize(){Object.assign(this.glareElement.style,{width:`${2*this.element.offsetWidth}`,height:`${2*this.element.offsetWidth}`})}onWindowResize(){this.updateGlareSize()}setTransition(){clearTimeout(this.transitionTimeout),this.element.style.transition=this.settings.speed+"ms "+this.settings.easing,this.glare&&(this.glareElement.style.transition=`opacity ${this.settings.speed}ms ${this.settings.easing}`),this.transitionTimeout=setTimeout(()=>{this.element.style.transition="",this.glare&&(this.glareElement.style.transition="")},this.settings.speed)}extendSettings(e){let t={reverse:!1,max:35,perspective:1e3,easing:"cubic-bezier(.03,.98,.52,.99)",scale:1,speed:300,transition:!0,axis:null,glare:!1,"max-glare":1,"glare-prerender":!1,"full-page-listening":!1,"mouse-event-element":null,reset:!0,gyroscope:!0,gyroscopeMinAngleX:-45,gyroscopeMaxAngleX:45,gyroscopeMinAngleY:-45,gyroscopeMaxAngleY:45},i={};for(var s in t)if(s in e)i[s]=e[s];else if(this.element.hasAttribute("data-tilt-"+s)){let e=this.element.getAttribute("data-tilt-"+s);try{i[s]=JSON.parse(e)}catch(t){i[s]=e}}else i[s]=t[s];return i}static init(t,i){t instanceof Node&&(t=[t]),t instanceof NodeList&&(t=[].slice.call(t)),t instanceof Array&&t.forEach(t=>{"vanillaTilt"in t||(t.vanillaTilt=new e(t,i))})}}return"undefined"!=typeof document&&(window.VanillaTilt=e,e.init(document.querySelectorAll("[data-tilt]"))),e}();
\ No newline at end of file
+var VanillaTilt=function(){"use strict";class e{constructor(e,t={}){if(!(e instanceof Node))throw"Can't initialize VanillaTilt because "+e+" is not a Node.";this.width=null,this.height=null,this.left=null,this.top=null,this.gammazero=null,this.betazero=null,this.lastgammazero=null,this.lastbetazero=null,this.oriented=60,this.transitionTimeout=null,this.updateCall=null,this.updateBind=this.update.bind(this),this.resetBind=this.reset.bind(this),this.element=e,this.settings=this.extendSettings(t),this.elementListener=this.getElementListener(),this.reverse=this.settings.reverse?-1:1,this.glare=this.isSettingTrue(this.settings.glare),this.glarePrerender=this.isSettingTrue(this.settings["glare-prerender"]),this.fullPageListening=this.isSettingTrue(this.settings["full-page-listening"]),this.gyroscope=this.isSettingTrue(this.settings.gyroscope),this.glare&&this.prepareGlare(),this.addEventListeners()}isSettingTrue(e){return""===e||!0===e||1===e}getElementListener(){if(!this.settings||!this.settings["mouse-event-element"])return this.element;if("string"==typeof this.settings["mouse-event-element"]){const e=document.querySelector(this.settings["mouse-event-element"]);if(e)return e}return this.settings["mouse-event-element"]instanceof Node?this.settings["mouse-event-element"]:void 0}addEventListeners(){this.onMouseEnterBind=this.onMouseEnter.bind(this),this.onMouseMoveBind=this.onMouseMove.bind(this),this.onMouseLeaveBind=this.onMouseLeave.bind(this),this.onWindowResizeBind=this.onWindowResize.bind(this),this.onDeviceOrientationBind=this.onDeviceOrientation.bind(this),this.elementListener.addEventListener("mouseenter",this.onMouseEnterBind),this.elementListener.addEventListener("mouseleave",this.onMouseLeaveBind),this.fullPageListening?window.document.addEventListener("mousemove",this.onMouseMoveBind):this.elementListener.addEventListener("mousemove",this.onMouseMoveBind),this.glare&&window.addEventListener("resize",this.onWindowResizeBind),this.gyroscope&&window.addEventListener("deviceorientation",this.onDeviceOrientationBind)}removeEventListeners(){this.elementListener.removeEventListener("mouseenter",this.onMouseEnterBind),this.elementListener.removeEventListener("mouseleave",this.onMouseLeaveBind),this.fullPageListening?window.document.removeEventListener("mousemove",this.onMouseMoveBind):this.elementListener.removeEventListener("mousemove",this.onMouseMoveBind),this.gyroscope&&window.removeEventListener("deviceorientation",this.onDeviceOrientationBind),this.glare&&window.removeEventListener("resize",this.onWindowResizeBind)}destroy(){clearTimeout(this.transitionTimeout),null!==this.updateCall&&cancelAnimationFrame(this.updateCall),this.reset(),this.removeEventListeners(),this.element.vanillaTilt=null,delete this.element.vanillaTilt,this.element=null}onDeviceOrientation(e){if(null===e.gamma||null===e.beta)return;this.updateElementPosition(),this.oriented>0&&(this.lastgammazero=this.gammazero,this.lastbetazero=this.betazero,null==this.gammazero?(this.gammazero=e.gamma,this.betazero=e.beta):(this.gammazero=(e.gamma+this.lastgammazero)/2,this.betazero=(e.beta+this.lastbetazero)/2),this.oriented-=1);const t=this.settings.gyroscopeMaxAngleX-this.settings.gyroscopeMinAngleX,i=this.settings.gyroscopeMaxAngleY-this.settings.gyroscopeMinAngleY,s=t/this.width,n=i/this.height,l=(e.gamma-(this.settings.gyroscopeMinAngleX+this.gammazero))/s,a=(e.beta-(this.settings.gyroscopeMinAngleY+this.betazero))/n;null!==this.updateCall&&cancelAnimationFrame(this.updateCall),this.event={clientX:l+this.left,clientY:a+this.top},this.updateCall=requestAnimationFrame(this.updateBind)}onMouseEnter(){this.updateElementPosition(),this.element.style.willChange="transform",this.setTransition()}onMouseMove(e){null!==this.updateCall&&cancelAnimationFrame(this.updateCall),this.event=e,this.updateCall=requestAnimationFrame(this.updateBind)}onMouseLeave(){this.fullPageListening||(this.setTransition(),this.settings.reset&&requestAnimationFrame(this.resetBind))}reset(){this.event={pageX:this.left+this.width/2,pageY:this.top+this.height/2},this.element&&this.element.style&&(this.element.style.transform=`perspective(${this.settings.perspective}px) `+"rotateX(0deg) rotateY(0deg) scale3d(1, 1, 1)"),this.glare&&(this.glareElement.style.transform="rotate(180deg) translate(-50%, -50%)",this.glareElement.style.opacity="0")}getValues(){if(this.fullPageListening)var e=this.event.clientX/document.body.clientWidth,t=this.event.clientY/document.body.clientHeight;else e=(this.event.clientX-this.left)/this.width,t=(this.event.clientY-this.top)/this.height;return e=Math.min(Math.max(e,0),1),t=Math.min(Math.max(t,0),1),{tiltX:(this.reverse*(this.settings.max/2-e*this.settings.max)).toFixed(2),tiltY:(this.reverse*(t*this.settings.max-this.settings.max/2)).toFixed(2),percentageX:100*e,percentageY:100*t,angle:Math.atan2(this.event.clientX-(this.left+this.width/2),-(this.event.clientY-(this.top+this.height/2)))*(180/Math.PI)}}updateElementPosition(){let e=this.element.getBoundingClientRect();this.width=this.element.offsetWidth,this.height=this.element.offsetHeight,this.left=e.left,this.top=e.top}update(){let e=this.getValues();this.element.style.transform="perspective("+this.settings.perspective+"px) rotateX("+("x"===this.settings.axis?0:e.tiltY)+"deg) rotateY("+("y"===this.settings.axis?0:e.tiltX)+"deg) scale3d("+this.settings.scale+", "+this.settings.scale+", "+this.settings.scale+")",this.glare&&(this.glareElement.style.transform=`rotate(${e.angle}deg) translate(-50%, -50%)`,this.glareElement.style.opacity=`${e.percentageY*this.settings["max-glare"]/100}`),this.element.dispatchEvent(new CustomEvent("tiltChange",{detail:e})),this.updateCall=null}prepareGlare(){if(!this.glarePrerender){const e=document.createElement("div");e.classList.add("js-tilt-glare");const t=document.createElement("div");t.classList.add("js-tilt-glare-inner"),e.appendChild(t),this.element.appendChild(e)}this.glareElementWrapper=this.element.querySelector(".js-tilt-glare"),this.glareElement=this.element.querySelector(".js-tilt-glare-inner"),this.glarePrerender||(Object.assign(this.glareElementWrapper.style,{position:"absolute",top:"0",left:"0",width:"100%",height:"100%",overflow:"hidden","pointer-events":"none"}),Object.assign(this.glareElement.style,{position:"absolute",top:"50%",left:"50%","pointer-events":"none","background-image":"linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)",width:`${2*this.element.offsetWidth}px`,height:`${2*this.element.offsetWidth}px`,transform:"rotate(180deg) translate(-50%, -50%)","transform-origin":"0% 0%",opacity:"0"}))}updateGlareSize(){Object.assign(this.glareElement.style,{width:`${2*this.element.offsetWidth}`,height:`${2*this.element.offsetWidth}`})}onWindowResize(){this.updateGlareSize()}setTransition(){clearTimeout(this.transitionTimeout),this.element.style.transition=this.settings.speed+"ms "+this.settings.easing,this.glare&&(this.glareElement.style.transition=`opacity ${this.settings.speed}ms ${this.settings.easing}`),this.transitionTimeout=setTimeout(()=>{this.element.style.transition="",this.glare&&(this.glareElement.style.transition="")},this.settings.speed)}extendSettings(e){let t={reverse:!1,max:35,perspective:1e3,easing:"cubic-bezier(.03,.98,.52,.99)",scale:1,speed:300,transition:!0,axis:null,glare:!1,"max-glare":1,"glare-prerender":!1,"full-page-listening":!1,"mouse-event-element":null,reset:!0,gyroscope:!0,gyroscopeMinAngleX:-45,gyroscopeMaxAngleX:45,gyroscopeMinAngleY:-45,gyroscopeMaxAngleY:45},i={};for(var s in t)if(s in e)i[s]=e[s];else if(this.element.hasAttribute("data-tilt-"+s)){let e=this.element.getAttribute("data-tilt-"+s);try{i[s]=JSON.parse(e)}catch(t){i[s]=e}}else i[s]=t[s];return i}static init(t,i){t instanceof Node&&(t=[t]),t instanceof NodeList&&(t=[].slice.call(t)),t instanceof Array&&t.forEach(t=>{"vanillaTilt"in t||(t.vanillaTilt=new e(t,i))})}}return"undefined"!=typeof document&&(window.VanillaTilt=e,e.init(document.querySelectorAll("[data-tilt]"))),e}();
\ No newline at end of file
Index: lib/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># vanilla-tilt.js\r\n\r\n[![npm version](https://badge.fury.io/js/vanilla-tilt.svg)](https://badge.fury.io/js/vanilla-tilt)\r\n[![ghit.me](https://ghit.me/badge.svg?repo=micku7zu/vanilla-tilt.js)](https://ghit.me/repo/micku7zu/vanilla-tilt.js)\r\n\r\nA smooth 3D tilt javascript library forked from [Tilt.js (jQuery version)](https://github.com/gijsroge/tilt.js).\r\n\r\n[View landing page (demos)](https://micku7zu.github.io/vanilla-tilt.js/)\r\n\r\n### Usage\r\n\r\n```html\r\n<body>\r\n<div class=\"your-element\" data-tilt></div>\r\n\r\n<!-- at the end of the body -->\r\n<script type=\"text/javascript\" src=\"vanilla-tilt.js\"></script>\r\n</body>\r\n```\r\n\r\n### Options\r\n```js\r\n{\r\n    reverse:                false,  // reverse the tilt direction\r\n    max:                    35,     // max tilt rotation (degrees)\r\n    perspective:            1000,   // Transform perspective, the lower the more extreme the tilt gets.\r\n    scale:                  1,      // 2 = 200%, 1.5 = 150%, etc..\r\n    speed:                  300,    // Speed of the enter/exit transition\r\n    transition:             true,   // Set a transition on enter/exit.\r\n    axis:                   null,   // What axis should be disabled. Can be X or Y.\r\n    reset:                  true,   // If the tilt effect has to be reset on exit.\r\n    easing:                 \"cubic-bezier(.03,.98,.52,.99)\",    // Easing on enter/exit.\r\n    glare:                  false,  // if it should have a \"glare\" effect\r\n    \"max-glare\":            1,      // the maximum \"glare\" opacity (1 = 100%, 0.5 = 50%)\r\n    \"glare-prerender\":      false,  // false = VanillaTilt creates the glare elements for you, otherwise\r\n                                    // you need to add .js-tilt-glare>.js-tilt-glare-inner by yourself\r\n    \"mouse-event-element\":  null,   // css-selector or link to HTML-element what will be listen mouse events\r\n    \"full-page-listening\":  false,  // If true, parallax effect will listen to mouse move events on the whole document, not only the selected element\r\n    gyroscope:              true,   // Boolean to enable/disable device orientation detection,\r\n    gyroscopeMinAngleX:     -45,    // This is the bottom limit of the device angle on X axis, meaning that a device rotated at this angle would tilt the element as if the mouse was on the left border of the element;\r\n    gyroscopeMaxAngleX:     45,     // This is the top limit of the device angle on X axis, meaning that a device rotated at this angle would tilt the element as if the mouse was on the right border of the element;\r\n    gyroscopeMinAngleY:     -45,    // This is the bottom limit of the device angle on Y axis, meaning that a device rotated at this angle would tilt the element as if the mouse was on the top border of the element;\r\n    gyroscopeMaxAngleY:     45,     // This is the top limit of the device angle on Y axis, meaning that a device rotated at this angle would tilt the element as if the mouse was on the bottom border of the element;\r\n}\r\n```\r\n\r\n### Events\r\n```js\r\nconst element = document.querySelector(\".js-tilt\");\r\nVanillaTilt.init(element);\r\nelement.addEventListener(\"tiltChange\", callback);\r\n```\r\n\r\n### Methods\r\n```js\r\nconst element = document.querySelector(\".js-tilt\");\r\nVanillaTilt.init(element);\r\n\r\n// Destroy instance\r\nelement.vanillaTilt.destroy();\r\n\r\n// Get values of instance\r\nelement.vanillaTilt.getValues();\r\n\r\n// Reset instance\r\nelement.vanillaTilt.reset();\r\n\r\n// It also supports NodeList\r\nconst elements = document.querySelectorAll(\".js-tilt\");\r\nVanillaTilt.init(elements);\r\n```\r\n\r\n### Install\r\nYou can copy and include any of the following file:\r\n\r\n* [dist/vanilla-tilt.js](https://raw.githubusercontent.com/micku7zu/vanilla-tilt.js/master/dist/vanilla-tilt.js) ~ 6kb\r\n* [dist/vanilla-tilt.min.js](https://raw.githubusercontent.com/micku7zu/vanilla-tilt.js/master/dist/vanilla-tilt.min.js) ~ 3.5kb\r\n* [dist/vanilla-tilt.babel.js](https://raw.githubusercontent.com/micku7zu/vanilla-tilt.js/master/dist/vanilla-tilt.babel.js) ~ 8.5kb\r\n* [dist/vanilla-tilt.babel.min.js](https://raw.githubusercontent.com/micku7zu/vanilla-tilt.js/master/dist/vanilla-tilt.babel.min.js) ~ 4.3kb\r\n\r\n#### NPM\r\n\r\nAlso available on npm https://www.npmjs.com/package/vanilla-tilt\r\n\r\n```\r\nnpm install vanilla-tilt\r\n```\r\n\r\n#### Typings\r\n\r\nInstalling typings using npm\r\n```\r\nnpm install @types/vanilla-tilt\r\n```\r\n\r\n### Credits\r\n\r\nOriginal library: [Tilt.js](http://gijsroge.github.io/tilt.js/)\r\n\r\nOriginal library author: [Gijs RogÃ©](https://twitter.com/GijsRoge)\r\n\r\n#### Contributors\r\n\r\n- [Livio Brunner](https://github.com/BrunnerLivio) <<a href=\"mailto:contact@brunnerliv.io\">contact@brunnerliv.io</a>> (Typings & Glare Effect)\r\n- [Oleg Postoev](https://github.com/Dok11)\r\n- [Matteo Rigon](https://github.com/matteo-rigon) (Device orientation support)\r\n- [Corey Austin](https://github.com/lazyhummingbird) (Initial gyroscope position)\r\n- [rrroyal](https://github.com/rrroyal) (Whole document mouse events listening)\r\n\r\n### License\r\n\r\nMIT License\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lib/README.md	(revision 7dddcf950b75f7c2e2a90d59473a49f52dd1721a)
+++ lib/README.md	(date 1555098297678)
@@ -88,10 +88,7 @@
 
 #### Typings
 
-Installing typings using npm
-```
-npm install @types/vanilla-tilt
-```
+Typings were out of date in the previous version, so I've rolled a copy directly into the application for you would be Typescript junkies!
 
 ### Credits
 
Index: dist/vanilla-tilt.babel.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>var VanillaTilt = (function () {\r\n'use strict';\r\n\r\nvar classCallCheck = function (instance, Constructor) {\r\n  if (!(instance instanceof Constructor)) {\r\n    throw new TypeError(\"Cannot call a class as a function\");\r\n  }\r\n};\r\n\r\n/**\r\n * Created by È˜andor Sergiu (micku7zu) on 1/27/2017.\r\n * Original idea: https://github.com/gijsroge/tilt.js\r\n * MIT License.\r\n * Version 1.6.1\r\n */\r\n\r\nvar VanillaTilt = function () {\r\n  function VanillaTilt(element) {\r\n    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n    classCallCheck(this, VanillaTilt);\r\n\r\n    if (!(element instanceof Node)) {\r\n      throw \"Can't initialize VanillaTilt because \" + element + \" is not a Node.\";\r\n    }\r\n\r\n    this.width = null;\r\n    this.height = null;\r\n    this.left = null;\r\n    this.top = null;\r\n    this.transitionTimeout = null;\r\n    this.updateCall = null;\r\n\r\n    this.updateBind = this.update.bind(this);\r\n    this.resetBind = this.reset.bind(this);\r\n\r\n    this.element = element;\r\n    this.settings = this.extendSettings(settings);\r\n    this.elementListener = this.getElementListener();\r\n\r\n    this.reverse = this.settings.reverse ? -1 : 1;\r\n\r\n    this.glare = this.isSettingTrue(this.settings.glare);\r\n    this.glarePrerender = this.isSettingTrue(this.settings[\"glare-prerender\"]);\r\n    this.fullPageListening = this.isSettingTrue(this.settings[\"full-page-listening\"]);\r\n    this.gyroscope = this.isSettingTrue(this.settings.gyroscope);\r\n\r\n    if (this.glare) {\r\n      this.prepareGlare();\r\n    }\r\n\r\n    this.addEventListeners();\r\n  }\r\n\r\n  VanillaTilt.prototype.isSettingTrue = function isSettingTrue(setting) {\r\n    return setting === \"\" || setting === true || setting === 1;\r\n  };\r\n\r\n  /**\r\n   * Method returns element what will be listen mouse events\r\n   * @return {Node}\r\n   */\r\n\r\n\r\n  VanillaTilt.prototype.getElementListener = function getElementListener() {\r\n    if (!this.settings || !this.settings[\"mouse-event-element\"]) {\r\n      return this.element;\r\n    }\r\n\r\n    if (typeof this.settings[\"mouse-event-element\"] === \"string\") {\r\n      var mouseEventElement = document.querySelector(this.settings[\"mouse-event-element\"]);\r\n\r\n      if (mouseEventElement) {\r\n        return mouseEventElement;\r\n      }\r\n    }\r\n\r\n    if (this.settings[\"mouse-event-element\"] instanceof Node) {\r\n      return this.settings[\"mouse-event-element\"];\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Method set listen methods for this.elementListener\r\n   * @return {Node}\r\n   */\r\n\r\n\r\n  VanillaTilt.prototype.addEventListeners = function addEventListeners() {\r\n    this.onMouseEnterBind = this.onMouseEnter.bind(this);\r\n    this.onMouseMoveBind = this.onMouseMove.bind(this);\r\n    this.onMouseLeaveBind = this.onMouseLeave.bind(this);\r\n    this.onWindowResizeBind = this.onWindowResize.bind(this);\r\n    this.onDeviceOrientationBind = this.onDeviceOrientation.bind(this);\r\n\r\n    this.elementListener.addEventListener(\"mouseenter\", this.onMouseEnterBind);\r\n    this.elementListener.addEventListener(\"mouseleave\", this.onMouseLeaveBind);\r\n\r\n    if (this.fullPageListening) {\r\n      window.document.addEventListener(\"mousemove\", this.onMouseMoveBind);\r\n    } else {\r\n      this.elementListener.addEventListener(\"mousemove\", this.onMouseMoveBind);\r\n    }\r\n\r\n    if (this.glare) {\r\n      window.addEventListener(\"resize\", this.onWindowResizeBind);\r\n    }\r\n\r\n    if (this.gyroscope) {\r\n      window.addEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Method remove event listeners from current this.elementListener\r\n   */\r\n\r\n\r\n  VanillaTilt.prototype.removeEventListeners = function removeEventListeners() {\r\n    this.elementListener.removeEventListener(\"mouseenter\", this.onMouseEnterBind);\r\n    this.elementListener.removeEventListener(\"mouseleave\", this.onMouseLeaveBind);\r\n\r\n    if (this.fullPageListening) {\r\n      window.document.removeEventListener(\"mousemove\", this.onMouseMoveBind);\r\n    } else {\r\n      this.elementListener.removeEventListener(\"mousemove\", this.onMouseMoveBind);\r\n    }\r\n\r\n    if (this.gyroscope) {\r\n      window.removeEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\r\n    }\r\n\r\n    if (this.glare) {\r\n      window.removeEventListener(\"resize\", this.onWindowResizeBind);\r\n    }\r\n  };\r\n\r\n  VanillaTilt.prototype.destroy = function destroy() {\r\n    clearTimeout(this.transitionTimeout);\r\n    if (this.updateCall !== null) {\r\n      cancelAnimationFrame(this.updateCall);\r\n    }\r\n\r\n    this.reset();\r\n\r\n    this.removeEventListeners();\r\n    this.element.vanillaTilt = null;\r\n    delete this.element.vanillaTilt;\r\n\r\n    this.element = null;\r\n  };\r\n\r\n  VanillaTilt.prototype.onDeviceOrientation = function onDeviceOrientation(event) {\r\n    if (event.gamma === null || event.beta === null) {\r\n      return;\r\n    }\r\n\r\n    this.updateElementPosition();\r\n\r\n    var totalAngleX = this.settings.gyroscopeMaxAngleX - this.settings.gyroscopeMinAngleX;\r\n    var totalAngleY = this.settings.gyroscopeMaxAngleY - this.settings.gyroscopeMinAngleY;\r\n\r\n    var degreesPerPixelX = totalAngleX / this.width;\r\n    var degreesPerPixelY = totalAngleY / this.height;\r\n\r\n    var angleX = event.gamma - this.settings.gyroscopeMinAngleX;\r\n    var angleY = event.beta - this.settings.gyroscopeMinAngleY;\r\n\r\n    var posX = angleX / degreesPerPixelX;\r\n    var posY = angleY / degreesPerPixelY;\r\n\r\n    if (this.updateCall !== null) {\r\n      cancelAnimationFrame(this.updateCall);\r\n    }\r\n\r\n    this.event = {\r\n      clientX: posX + this.left,\r\n      clientY: posY + this.top\r\n    };\r\n\r\n    this.updateCall = requestAnimationFrame(this.updateBind);\r\n  };\r\n\r\n  VanillaTilt.prototype.onMouseEnter = function onMouseEnter() {\r\n    this.updateElementPosition();\r\n    this.element.style.willChange = \"transform\";\r\n    this.setTransition();\r\n  };\r\n\r\n  VanillaTilt.prototype.onMouseMove = function onMouseMove(event) {\r\n    if (this.updateCall !== null) {\r\n      cancelAnimationFrame(this.updateCall);\r\n    }\r\n\r\n    this.event = event;\r\n    this.updateCall = requestAnimationFrame(this.updateBind);\r\n  };\r\n\r\n  VanillaTilt.prototype.onMouseLeave = function onMouseLeave() {\r\n    if (this.fullPageListening) {\r\n      return;\r\n    }\r\n\r\n    this.setTransition();\r\n\r\n    if (this.settings.reset) {\r\n      requestAnimationFrame(this.resetBind);\r\n    }\r\n  };\r\n\r\n  VanillaTilt.prototype.reset = function reset() {\r\n    this.event = {\r\n      pageX: this.left + this.width / 2,\r\n      pageY: this.top + this.height / 2\r\n    };\r\n\r\n    if (this.element && this.element.style) {\r\n      this.element.style.transform = \"perspective(\" + this.settings.perspective + \"px) \" + \"rotateX(0deg) \" + \"rotateY(0deg) \" + \"scale3d(1, 1, 1)\";\r\n    }\r\n\r\n    if (this.glare) {\r\n      this.glareElement.style.transform = \"rotate(180deg) translate(-50%, -50%)\";\r\n      this.glareElement.style.opacity = \"0\";\r\n    }\r\n  };\r\n\r\n  VanillaTilt.prototype.getValues = function getValues() {\r\n    if (this.fullPageListening) {\r\n      var x = this.event.clientX / document.body.clientWidth;\r\n      var y = this.event.clientY / document.body.clientHeight;\r\n    } else {\r\n      var x = (this.event.clientX - this.left) / this.width;\r\n      var y = (this.event.clientY - this.top) / this.height;\r\n    }\r\n\r\n    x = Math.min(Math.max(x, 0), 1);\r\n    y = Math.min(Math.max(y, 0), 1);\r\n\r\n    var tiltX = (this.reverse * (this.settings.max / 2 - x * this.settings.max)).toFixed(2);\r\n    var tiltY = (this.reverse * (y * this.settings.max - this.settings.max / 2)).toFixed(2);\r\n    var angle = Math.atan2(this.event.clientX - (this.left + this.width / 2), -(this.event.clientY - (this.top + this.height / 2))) * (180 / Math.PI);\r\n\r\n    return {\r\n      tiltX: tiltX,\r\n      tiltY: tiltY,\r\n      percentageX: x * 100,\r\n      percentageY: y * 100,\r\n      angle: angle\r\n    };\r\n  };\r\n\r\n  VanillaTilt.prototype.updateElementPosition = function updateElementPosition() {\r\n    var rect = this.element.getBoundingClientRect();\r\n\r\n    this.width = this.element.offsetWidth;\r\n    this.height = this.element.offsetHeight;\r\n    this.left = rect.left;\r\n    this.top = rect.top;\r\n  };\r\n\r\n  VanillaTilt.prototype.update = function update() {\r\n    var values = this.getValues();\r\n\r\n    this.element.style.transform = \"perspective(\" + this.settings.perspective + \"px) \" + \"rotateX(\" + (this.settings.axis === \"x\" ? 0 : values.tiltY) + \"deg) \" + \"rotateY(\" + (this.settings.axis === \"y\" ? 0 : values.tiltX) + \"deg) \" + \"scale3d(\" + this.settings.scale + \", \" + this.settings.scale + \", \" + this.settings.scale + \")\";\r\n\r\n    if (this.glare) {\r\n      this.glareElement.style.transform = \"rotate(\" + values.angle + \"deg) translate(-50%, -50%)\";\r\n      this.glareElement.style.opacity = \"\" + values.percentageY * this.settings[\"max-glare\"] / 100;\r\n    }\r\n\r\n    this.element.dispatchEvent(new CustomEvent(\"tiltChange\", {\r\n      \"detail\": values\r\n    }));\r\n\r\n    this.updateCall = null;\r\n  };\r\n\r\n  /**\r\n   * Appends the glare element (if glarePrerender equals false)\r\n   * and sets the default style\r\n   */\r\n\r\n\r\n  VanillaTilt.prototype.prepareGlare = function prepareGlare() {\r\n    // If option pre-render is enabled we assume all html/css is present for an optimal glare effect.\r\n    if (!this.glarePrerender) {\r\n      // Create glare element\r\n      var jsTiltGlare = document.createElement(\"div\");\r\n      jsTiltGlare.classList.add(\"js-tilt-glare\");\r\n\r\n      var jsTiltGlareInner = document.createElement(\"div\");\r\n      jsTiltGlareInner.classList.add(\"js-tilt-glare-inner\");\r\n\r\n      jsTiltGlare.appendChild(jsTiltGlareInner);\r\n      this.element.appendChild(jsTiltGlare);\r\n    }\r\n\r\n    this.glareElementWrapper = this.element.querySelector(\".js-tilt-glare\");\r\n    this.glareElement = this.element.querySelector(\".js-tilt-glare-inner\");\r\n\r\n    if (this.glarePrerender) {\r\n      return;\r\n    }\r\n\r\n    Object.assign(this.glareElementWrapper.style, {\r\n      \"position\": \"absolute\",\r\n      \"top\": \"0\",\r\n      \"left\": \"0\",\r\n      \"width\": \"100%\",\r\n      \"height\": \"100%\",\r\n      \"overflow\": \"hidden\",\r\n      \"pointer-events\": \"none\"\r\n    });\r\n\r\n    Object.assign(this.glareElement.style, {\r\n      \"position\": \"absolute\",\r\n      \"top\": \"50%\",\r\n      \"left\": \"50%\",\r\n      \"pointer-events\": \"none\",\r\n      \"background-image\": \"linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)\",\r\n      \"width\": this.element.offsetWidth * 2 + \"px\",\r\n      \"height\": this.element.offsetWidth * 2 + \"px\",\r\n      \"transform\": \"rotate(180deg) translate(-50%, -50%)\",\r\n      \"transform-origin\": \"0% 0%\",\r\n      \"opacity\": \"0\"\r\n    });\r\n  };\r\n\r\n  VanillaTilt.prototype.updateGlareSize = function updateGlareSize() {\r\n    Object.assign(this.glareElement.style, {\r\n      \"width\": \"\" + this.element.offsetWidth * 2,\r\n      \"height\": \"\" + this.element.offsetWidth * 2\r\n    });\r\n  };\r\n\r\n  VanillaTilt.prototype.onWindowResize = function onWindowResize() {\r\n    this.updateGlareSize();\r\n  };\r\n\r\n  VanillaTilt.prototype.setTransition = function setTransition() {\r\n    var _this = this;\r\n\r\n    clearTimeout(this.transitionTimeout);\r\n    this.element.style.transition = this.settings.speed + \"ms \" + this.settings.easing;\r\n    if (this.glare) this.glareElement.style.transition = \"opacity \" + this.settings.speed + \"ms \" + this.settings.easing;\r\n\r\n    this.transitionTimeout = setTimeout(function () {\r\n      _this.element.style.transition = \"\";\r\n      if (_this.glare) {\r\n        _this.glareElement.style.transition = \"\";\r\n      }\r\n    }, this.settings.speed);\r\n  };\r\n\r\n  /**\r\n   * Method return patched settings of instance\r\n   * @param {boolean} settings.reverse - reverse the tilt direction\r\n   * @param {number} settings.max - max tilt rotation (degrees)\r\n   * @param {number} settings.perspective - Transform perspective, the lower the more extreme the tilt gets\r\n   * @param {string} settings.easing - Easing on enter/exit\r\n   * @param {number} settings.scale - 2 = 200%, 1.5 = 150%, etc..\r\n   * @param {number} settings.speed - Speed of the enter/exit transition\r\n   * @param {boolean} settings.transition - Set a transition on enter/exit\r\n   * @param settings.axis - What axis should be disabled. Can be X or Y\r\n   * @param {boolean} settings.glare - What axis should be disabled. Can be X or Y\r\n   * @param {number} settings.max-glare - the maximum \"glare\" opacity (1 = 100%, 0.5 = 50%)\r\n   * @param {boolean} settings.glare-prerender - false = VanillaTilt creates the glare elements for you, otherwise\r\n   * @param {string|object} settings.mouse-event-element - String selector or link to HTML-element what will be listen mouse events\r\n   * @param {boolean} settings.reset - false = If the tilt effect has to be reset on exit\r\n   * @param {gyroscope} settings.gyroscope - Enable tilting by deviceorientation events\r\n   * @param {gyroscopeSensitivity} settings.gyroscopeSensitivity - Between 0 and 1 - The angle at which max tilt position is reached. 1 = 90deg, 0.5 = 45deg, etc..\r\n   */\r\n\r\n\r\n  VanillaTilt.prototype.extendSettings = function extendSettings(settings) {\r\n    var defaultSettings = {\r\n      reverse: false,\r\n      max: 35,\r\n      perspective: 1000,\r\n      easing: \"cubic-bezier(.03,.98,.52,.99)\",\r\n      scale: 1,\r\n      speed: 300,\r\n      transition: true,\r\n      axis: null,\r\n      glare: false,\r\n      \"max-glare\": 1,\r\n      \"glare-prerender\": false,\r\n      \"full-page-listening\": false,\r\n      \"mouse-event-element\": null,\r\n      reset: true,\r\n      gyroscope: true,\r\n      gyroscopeMinAngleX: -45,\r\n      gyroscopeMaxAngleX: 45,\r\n      gyroscopeMinAngleY: -45,\r\n      gyroscopeMaxAngleY: 45\r\n    };\r\n\r\n    var newSettings = {};\r\n    for (var property in defaultSettings) {\r\n      if (property in settings) {\r\n        newSettings[property] = settings[property];\r\n      } else if (this.element.hasAttribute(\"data-tilt-\" + property)) {\r\n        var attribute = this.element.getAttribute(\"data-tilt-\" + property);\r\n        try {\r\n          newSettings[property] = JSON.parse(attribute);\r\n        } catch (e) {\r\n          newSettings[property] = attribute;\r\n        }\r\n      } else {\r\n        newSettings[property] = defaultSettings[property];\r\n      }\r\n    }\r\n\r\n    return newSettings;\r\n  };\r\n\r\n  VanillaTilt.init = function init(elements, settings) {\r\n    if (elements instanceof Node) {\r\n      elements = [elements];\r\n    }\r\n\r\n    if (elements instanceof NodeList) {\r\n      elements = [].slice.call(elements);\r\n    }\r\n\r\n    if (!(elements instanceof Array)) {\r\n      return;\r\n    }\r\n\r\n    elements.forEach(function (element) {\r\n      if (!(\"vanillaTilt\" in element)) {\r\n        element.vanillaTilt = new VanillaTilt(element, settings);\r\n      }\r\n    });\r\n  };\r\n\r\n  return VanillaTilt;\r\n}();\r\n\r\nif (typeof document !== \"undefined\") {\r\n  /* expose the class to window */\r\n  window.VanillaTilt = VanillaTilt;\r\n\r\n  /**\r\n   * Auto load\r\n   */\r\n  VanillaTilt.init(document.querySelectorAll(\"[data-tilt]\"));\r\n}\r\n\r\nreturn VanillaTilt;\r\n\r\n}());\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- dist/vanilla-tilt.babel.js	(revision 7dddcf950b75f7c2e2a90d59473a49f52dd1721a)
+++ dist/vanilla-tilt.babel.js	(date 1555098296635)
@@ -27,6 +27,13 @@
     this.height = null;
     this.left = null;
     this.top = null;
+
+    this.gammazero = null;
+    this.betazero = null;
+    this.lastgammazero = null;
+    this.lastbetazero = null;
+    this.oriented = 60;
+
     this.transitionTimeout = null;
     this.updateCall = null;
 
@@ -156,14 +163,27 @@
 
     this.updateElementPosition();
 
+    if (this.oriented > 0) {
+      this.lastgammazero = this.gammazero;
+      this.lastbetazero = this.betazero;
+      if (this.gammazero == null) {
+        this.gammazero = event.gamma;
+        this.betazero = event.beta;
+      } else {
+        this.gammazero = (event.gamma + this.lastgammazero) / 2;
+        this.betazero = (event.beta + this.lastbetazero) / 2;
+      }
+      this.oriented -= 1;
+    }
+
     var totalAngleX = this.settings.gyroscopeMaxAngleX - this.settings.gyroscopeMinAngleX;
     var totalAngleY = this.settings.gyroscopeMaxAngleY - this.settings.gyroscopeMinAngleY;
 
     var degreesPerPixelX = totalAngleX / this.width;
     var degreesPerPixelY = totalAngleY / this.height;
 
-    var angleX = event.gamma - this.settings.gyroscopeMinAngleX;
-    var angleY = event.beta - this.settings.gyroscopeMinAngleY;
+    var angleX = event.gamma - (this.settings.gyroscopeMinAngleX + this.gammazero);
+    var angleY = event.beta - (this.settings.gyroscopeMinAngleY + this.betazero);
 
     var posX = angleX / degreesPerPixelX;
     var posY = angleY / degreesPerPixelY;
Index: dist/vanilla-tilt.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>var VanillaTilt = (function () {\r\n'use strict';\r\n\r\n/**\r\n * Created by È˜andor Sergiu (micku7zu) on 1/27/2017.\r\n * Original idea: https://github.com/gijsroge/tilt.js\r\n * MIT License.\r\n * Version 1.6.1\r\n */\r\n\r\nclass VanillaTilt {\r\n  constructor(element, settings = {}) {\r\n    if (!(element instanceof Node)) {\r\n      throw (\"Can't initialize VanillaTilt because \" + element + \" is not a Node.\");\r\n    }\r\n\r\n    this.width = null;\r\n    this.height = null;\r\n    this.left = null;\r\n    this.top = null;\r\n    this.transitionTimeout = null;\r\n    this.updateCall = null;\r\n\r\n    this.updateBind = this.update.bind(this);\r\n    this.resetBind = this.reset.bind(this);\r\n\r\n    this.element = element;\r\n    this.settings = this.extendSettings(settings);\r\n    this.elementListener = this.getElementListener();\r\n\r\n    this.reverse = this.settings.reverse ? -1 : 1;\r\n\r\n    this.glare = this.isSettingTrue(this.settings.glare);\r\n    this.glarePrerender = this.isSettingTrue(this.settings[\"glare-prerender\"]);\r\n    this.fullPageListening = this.isSettingTrue(this.settings[\"full-page-listening\"]);\r\n    this.gyroscope = this.isSettingTrue(this.settings.gyroscope);\r\n\r\n    if (this.glare) {\r\n      this.prepareGlare();\r\n    }\r\n\r\n    this.addEventListeners();\r\n  }\r\n\r\n  isSettingTrue(setting) {\r\n    return setting === \"\" || setting === true || setting === 1;\r\n  }\r\n\r\n  /**\r\n   * Method returns element what will be listen mouse events\r\n   * @return {Node}\r\n   */\r\n  getElementListener() {\r\n    if (!this.settings || !this.settings[\"mouse-event-element\"]) {\r\n      return this.element;\r\n    }\r\n\r\n    if (typeof this.settings[\"mouse-event-element\"] === \"string\") {\r\n      const mouseEventElement = document.querySelector(this.settings[\"mouse-event-element\"]);\r\n\r\n      if (mouseEventElement) {\r\n        return mouseEventElement;\r\n      }\r\n    }\r\n\r\n    if (this.settings[\"mouse-event-element\"] instanceof Node) {\r\n      return this.settings[\"mouse-event-element\"];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method set listen methods for this.elementListener\r\n   * @return {Node}\r\n   */\r\n  addEventListeners() {\r\n    this.onMouseEnterBind = this.onMouseEnter.bind(this);\r\n    this.onMouseMoveBind = this.onMouseMove.bind(this);\r\n    this.onMouseLeaveBind = this.onMouseLeave.bind(this);\r\n    this.onWindowResizeBind = this.onWindowResize.bind(this);\r\n    this.onDeviceOrientationBind = this.onDeviceOrientation.bind(this);\r\n\r\n    this.elementListener.addEventListener(\"mouseenter\", this.onMouseEnterBind);\r\n    this.elementListener.addEventListener(\"mouseleave\", this.onMouseLeaveBind);\r\n\r\n    if (this.fullPageListening) {\r\n        window.document.addEventListener(\"mousemove\", this.onMouseMoveBind);\r\n    } else {\r\n        this.elementListener.addEventListener(\"mousemove\", this.onMouseMoveBind);\r\n    }\r\n\r\n    if (this.glare) {\r\n      window.addEventListener(\"resize\", this.onWindowResizeBind);\r\n    }\r\n\r\n    if (this.gyroscope) {\r\n      window.addEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method remove event listeners from current this.elementListener\r\n   */\r\n  removeEventListeners() {\r\n    this.elementListener.removeEventListener(\"mouseenter\", this.onMouseEnterBind);\r\n    this.elementListener.removeEventListener(\"mouseleave\", this.onMouseLeaveBind);\r\n\r\n    if (this.fullPageListening) {\r\n        window.document.removeEventListener(\"mousemove\", this.onMouseMoveBind);\r\n    } else {\r\n        this.elementListener.removeEventListener(\"mousemove\", this.onMouseMoveBind);\r\n    }\r\n\r\n    if (this.gyroscope) {\r\n      window.removeEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\r\n    }\r\n\r\n    if (this.glare) {\r\n      window.removeEventListener(\"resize\", this.onWindowResizeBind);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    clearTimeout(this.transitionTimeout);\r\n    if (this.updateCall !== null) {\r\n      cancelAnimationFrame(this.updateCall);\r\n    }\r\n\r\n    this.reset();\r\n\r\n    this.removeEventListeners();\r\n    this.element.vanillaTilt = null;\r\n    delete this.element.vanillaTilt;\r\n\r\n    this.element = null;\r\n  }\r\n\r\n  onDeviceOrientation(event) {\r\n    if (event.gamma === null || event.beta === null) {\r\n      return;\r\n    }\r\n\r\n    this.updateElementPosition();\r\n\r\n    const totalAngleX = this.settings.gyroscopeMaxAngleX - this.settings.gyroscopeMinAngleX;\r\n    const totalAngleY = this.settings.gyroscopeMaxAngleY - this.settings.gyroscopeMinAngleY;\r\n\r\n    const degreesPerPixelX = totalAngleX / this.width;\r\n    const degreesPerPixelY = totalAngleY / this.height;\r\n\r\n    const angleX = event.gamma - this.settings.gyroscopeMinAngleX;\r\n    const angleY = event.beta - this.settings.gyroscopeMinAngleY;\r\n\r\n    const posX = angleX / degreesPerPixelX;\r\n    const posY = angleY / degreesPerPixelY;\r\n\r\n    if (this.updateCall !== null) {\r\n      cancelAnimationFrame(this.updateCall);\r\n    }\r\n\r\n    this.event = {\r\n      clientX: posX + this.left,\r\n      clientY: posY + this.top,\r\n    };\r\n\r\n    this.updateCall = requestAnimationFrame(this.updateBind);\r\n  }\r\n\r\n  onMouseEnter() {\r\n    this.updateElementPosition();\r\n    this.element.style.willChange = \"transform\";\r\n    this.setTransition();\r\n  }\r\n\r\n  onMouseMove(event) {\r\n    if (this.updateCall !== null) {\r\n      cancelAnimationFrame(this.updateCall);\r\n    }\r\n\r\n    this.event = event;\r\n    this.updateCall = requestAnimationFrame(this.updateBind);\r\n  }\r\n\r\n  onMouseLeave() {\r\n    if (this.fullPageListening) { return; }\r\n\r\n    this.setTransition();\r\n\r\n    if (this.settings.reset) {\r\n      requestAnimationFrame(this.resetBind);\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.event = {\r\n      pageX: this.left + this.width / 2,\r\n      pageY: this.top + this.height / 2\r\n    };\r\n\r\n    if (this.element && this.element.style) {\r\n      this.element.style.transform = `perspective(${this.settings.perspective}px) ` +\r\n        `rotateX(0deg) ` +\r\n        `rotateY(0deg) ` +\r\n        `scale3d(1, 1, 1)`;\r\n    }\r\n\r\n    if (this.glare) {\r\n      this.glareElement.style.transform = \"rotate(180deg) translate(-50%, -50%)\";\r\n      this.glareElement.style.opacity = \"0\";\r\n    }\r\n  }\r\n\r\n  getValues() {\r\n    if (this.fullPageListening) {\r\n        var x = this.event.clientX / document.body.clientWidth;\r\n        var y = this.event.clientY / document.body.clientHeight;\r\n    } else {\r\n        var x = (this.event.clientX - this.left) / this.width;\r\n        var y = (this.event.clientY - this.top) / this.height;\r\n    }\r\n\r\n    x = Math.min(Math.max(x, 0), 1);\r\n    y = Math.min(Math.max(y, 0), 1);\r\n\r\n    let tiltX = (this.reverse * (this.settings.max / 2 - x * this.settings.max)).toFixed(2);\r\n    let tiltY = (this.reverse * (y * this.settings.max - this.settings.max / 2)).toFixed(2);\r\n    let angle = Math.atan2(this.event.clientX - (this.left + this.width / 2), -(this.event.clientY - (this.top + this.height / 2))) * (180 / Math.PI);\r\n\r\n    return {\r\n      tiltX: tiltX,\r\n      tiltY: tiltY,\r\n      percentageX: x * 100,\r\n      percentageY: y * 100,\r\n      angle: angle\r\n    };\r\n  }\r\n\r\n  updateElementPosition() {\r\n    let rect = this.element.getBoundingClientRect();\r\n\r\n    this.width = this.element.offsetWidth;\r\n    this.height = this.element.offsetHeight;\r\n    this.left = rect.left;\r\n    this.top = rect.top;\r\n  }\r\n\r\n  update() {\r\n    let values = this.getValues();\r\n\r\n    this.element.style.transform = \"perspective(\" + this.settings.perspective + \"px) \" +\r\n      \"rotateX(\" + (this.settings.axis === \"x\" ? 0 : values.tiltY) + \"deg) \" +\r\n      \"rotateY(\" + (this.settings.axis === \"y\" ? 0 : values.tiltX) + \"deg) \" +\r\n      \"scale3d(\" + this.settings.scale + \", \" + this.settings.scale + \", \" + this.settings.scale + \")\";\r\n\r\n    if (this.glare) {\r\n      this.glareElement.style.transform = `rotate(${values.angle}deg) translate(-50%, -50%)`;\r\n      this.glareElement.style.opacity = `${values.percentageY * this.settings[\"max-glare\"] / 100}`;\r\n    }\r\n\r\n    this.element.dispatchEvent(new CustomEvent(\"tiltChange\", {\r\n      \"detail\": values\r\n    }));\r\n\r\n    this.updateCall = null;\r\n  }\r\n\r\n  /**\r\n   * Appends the glare element (if glarePrerender equals false)\r\n   * and sets the default style\r\n   */\r\n  prepareGlare() {\r\n    // If option pre-render is enabled we assume all html/css is present for an optimal glare effect.\r\n    if (!this.glarePrerender) {\r\n      // Create glare element\r\n      const jsTiltGlare = document.createElement(\"div\");\r\n      jsTiltGlare.classList.add(\"js-tilt-glare\");\r\n\r\n      const jsTiltGlareInner = document.createElement(\"div\");\r\n      jsTiltGlareInner.classList.add(\"js-tilt-glare-inner\");\r\n\r\n      jsTiltGlare.appendChild(jsTiltGlareInner);\r\n      this.element.appendChild(jsTiltGlare);\r\n    }\r\n\r\n    this.glareElementWrapper = this.element.querySelector(\".js-tilt-glare\");\r\n    this.glareElement = this.element.querySelector(\".js-tilt-glare-inner\");\r\n\r\n    if (this.glarePrerender) {\r\n      return;\r\n    }\r\n\r\n    Object.assign(this.glareElementWrapper.style, {\r\n      \"position\": \"absolute\",\r\n      \"top\": \"0\",\r\n      \"left\": \"0\",\r\n      \"width\": \"100%\",\r\n      \"height\": \"100%\",\r\n      \"overflow\": \"hidden\",\r\n      \"pointer-events\": \"none\"\r\n    });\r\n\r\n    Object.assign(this.glareElement.style, {\r\n      \"position\": \"absolute\",\r\n      \"top\": \"50%\",\r\n      \"left\": \"50%\",\r\n      \"pointer-events\": \"none\",\r\n      \"background-image\": `linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)`,\r\n      \"width\": `${this.element.offsetWidth * 2}px`,\r\n      \"height\": `${this.element.offsetWidth * 2}px`,\r\n      \"transform\": \"rotate(180deg) translate(-50%, -50%)\",\r\n      \"transform-origin\": \"0% 0%\",\r\n      \"opacity\": \"0\",\r\n    });\r\n  }\r\n\r\n  updateGlareSize() {\r\n    Object.assign(this.glareElement.style, {\r\n      \"width\": `${this.element.offsetWidth * 2}`,\r\n      \"height\": `${this.element.offsetWidth * 2}`,\r\n    });\r\n  }\r\n\r\n  onWindowResize() {\r\n    this.updateGlareSize();\r\n  }\r\n\r\n  setTransition() {\r\n    clearTimeout(this.transitionTimeout);\r\n    this.element.style.transition = this.settings.speed + \"ms \" + this.settings.easing;\r\n    if (this.glare) this.glareElement.style.transition = `opacity ${this.settings.speed}ms ${this.settings.easing}`;\r\n\r\n    this.transitionTimeout = setTimeout(() => {\r\n      this.element.style.transition = \"\";\r\n      if (this.glare) {\r\n        this.glareElement.style.transition = \"\";\r\n      }\r\n    }, this.settings.speed);\r\n\r\n  }\r\n\r\n  /**\r\n   * Method return patched settings of instance\r\n   * @param {boolean} settings.reverse - reverse the tilt direction\r\n   * @param {number} settings.max - max tilt rotation (degrees)\r\n   * @param {number} settings.perspective - Transform perspective, the lower the more extreme the tilt gets\r\n   * @param {string} settings.easing - Easing on enter/exit\r\n   * @param {number} settings.scale - 2 = 200%, 1.5 = 150%, etc..\r\n   * @param {number} settings.speed - Speed of the enter/exit transition\r\n   * @param {boolean} settings.transition - Set a transition on enter/exit\r\n   * @param settings.axis - What axis should be disabled. Can be X or Y\r\n   * @param {boolean} settings.glare - What axis should be disabled. Can be X or Y\r\n   * @param {number} settings.max-glare - the maximum \"glare\" opacity (1 = 100%, 0.5 = 50%)\r\n   * @param {boolean} settings.glare-prerender - false = VanillaTilt creates the glare elements for you, otherwise\r\n   * @param {string|object} settings.mouse-event-element - String selector or link to HTML-element what will be listen mouse events\r\n   * @param {boolean} settings.reset - false = If the tilt effect has to be reset on exit\r\n   * @param {gyroscope} settings.gyroscope - Enable tilting by deviceorientation events\r\n   * @param {gyroscopeSensitivity} settings.gyroscopeSensitivity - Between 0 and 1 - The angle at which max tilt position is reached. 1 = 90deg, 0.5 = 45deg, etc..\r\n   */\r\n  extendSettings(settings) {\r\n    let defaultSettings = {\r\n      reverse: false,\r\n      max: 35,\r\n      perspective: 1000,\r\n      easing: \"cubic-bezier(.03,.98,.52,.99)\",\r\n      scale: 1,\r\n      speed: 300,\r\n      transition: true,\r\n      axis: null,\r\n      glare: false,\r\n      \"max-glare\": 1,\r\n      \"glare-prerender\": false,\r\n      \"full-page-listening\": false,\r\n      \"mouse-event-element\": null,\r\n      reset: true,\r\n      gyroscope: true,\r\n      gyroscopeMinAngleX: -45,\r\n      gyroscopeMaxAngleX: 45,\r\n      gyroscopeMinAngleY: -45,\r\n      gyroscopeMaxAngleY: 45,\r\n    };\r\n\r\n    let newSettings = {};\r\n    for (var property in defaultSettings) {\r\n      if (property in settings) {\r\n        newSettings[property] = settings[property];\r\n      } else if (this.element.hasAttribute(\"data-tilt-\" + property)) {\r\n        let attribute = this.element.getAttribute(\"data-tilt-\" + property);\r\n        try {\r\n          newSettings[property] = JSON.parse(attribute);\r\n        } catch (e) {\r\n          newSettings[property] = attribute;\r\n        }\r\n\r\n      } else {\r\n        newSettings[property] = defaultSettings[property];\r\n      }\r\n    }\r\n\r\n    return newSettings;\r\n  }\r\n\r\n  static init(elements, settings) {\r\n    if (elements instanceof Node) {\r\n      elements = [elements];\r\n    }\r\n\r\n    if (elements instanceof NodeList) {\r\n      elements = [].slice.call(elements);\r\n    }\r\n\r\n    if (!(elements instanceof Array)) {\r\n      return;\r\n    }\r\n\r\n    elements.forEach((element) => {\r\n      if (!(\"vanillaTilt\" in element)) {\r\n        element.vanillaTilt = new VanillaTilt(element, settings);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nif (typeof document !== \"undefined\") {\r\n  /* expose the class to window */\r\n  window.VanillaTilt = VanillaTilt;\r\n\r\n  /**\r\n   * Auto load\r\n   */\r\n  VanillaTilt.init(document.querySelectorAll(\"[data-tilt]\"));\r\n}\r\n\r\nreturn VanillaTilt;\r\n\r\n}());\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- dist/vanilla-tilt.js	(revision 7dddcf950b75f7c2e2a90d59473a49f52dd1721a)
+++ dist/vanilla-tilt.js	(date 1555098296635)
@@ -18,6 +18,13 @@
     this.height = null;
     this.left = null;
     this.top = null;
+
+    this.gammazero = null;
+    this.betazero = null;
+    this.lastgammazero = null;
+    this.lastbetazero = null;
+    this.oriented = 60;
+
     this.transitionTimeout = null;
     this.updateCall = null;
 
@@ -83,9 +90,9 @@
     this.elementListener.addEventListener("mouseleave", this.onMouseLeaveBind);
 
     if (this.fullPageListening) {
-        window.document.addEventListener("mousemove", this.onMouseMoveBind);
+      window.document.addEventListener("mousemove", this.onMouseMoveBind);
     } else {
-        this.elementListener.addEventListener("mousemove", this.onMouseMoveBind);
+      this.elementListener.addEventListener("mousemove", this.onMouseMoveBind);
     }
 
     if (this.glare) {
@@ -105,9 +112,9 @@
     this.elementListener.removeEventListener("mouseleave", this.onMouseLeaveBind);
 
     if (this.fullPageListening) {
-        window.document.removeEventListener("mousemove", this.onMouseMoveBind);
+      window.document.removeEventListener("mousemove", this.onMouseMoveBind);
     } else {
-        this.elementListener.removeEventListener("mousemove", this.onMouseMoveBind);
+      this.elementListener.removeEventListener("mousemove", this.onMouseMoveBind);
     }
 
     if (this.gyroscope) {
@@ -141,14 +148,27 @@
 
     this.updateElementPosition();
 
+    if (this.oriented > 0) {
+      this.lastgammazero = this.gammazero;
+      this.lastbetazero = this.betazero;
+      if (this.gammazero == null) {
+        this.gammazero = event.gamma;
+        this.betazero = event.beta;
+      } else {
+        this.gammazero = (event.gamma + this.lastgammazero) / 2;
+        this.betazero = (event.beta + this.lastbetazero) / 2;
+      }
+      this.oriented -= 1;
+    }
+
     const totalAngleX = this.settings.gyroscopeMaxAngleX - this.settings.gyroscopeMinAngleX;
     const totalAngleY = this.settings.gyroscopeMaxAngleY - this.settings.gyroscopeMinAngleY;
 
     const degreesPerPixelX = totalAngleX / this.width;
     const degreesPerPixelY = totalAngleY / this.height;
 
-    const angleX = event.gamma - this.settings.gyroscopeMinAngleX;
-    const angleY = event.beta - this.settings.gyroscopeMinAngleY;
+    const angleX = event.gamma - (this.settings.gyroscopeMinAngleX + this.gammazero);
+    const angleY = event.beta - (this.settings.gyroscopeMinAngleY + this.betazero);
 
     const posX = angleX / degreesPerPixelX;
     const posY = angleY / degreesPerPixelY;
@@ -181,7 +201,9 @@
   }
 
   onMouseLeave() {
-    if (this.fullPageListening) { return; }
+    if (this.fullPageListening) {
+      return;
+    }
 
     this.setTransition();
 
@@ -211,11 +233,11 @@
 
   getValues() {
     if (this.fullPageListening) {
-        var x = this.event.clientX / document.body.clientWidth;
-        var y = this.event.clientY / document.body.clientHeight;
+      var x = this.event.clientX / document.body.clientWidth;
+      var y = this.event.clientY / document.body.clientHeight;
     } else {
-        var x = (this.event.clientX - this.left) / this.width;
-        var y = (this.event.clientY - this.top) / this.height;
+      var x = (this.event.clientX - this.left) / this.width;
+      var y = (this.event.clientY - this.top) / this.height;
     }
 
     x = Math.min(Math.max(x, 0), 1);
Index: src/vanilla-tilt.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\r\n * Created by È˜andor Sergiu (micku7zu) on 1/27/2017.\r\n * Original idea: https://github.com/gijsroge/tilt.js\r\n * MIT License.\r\n * Version 1.6.1\r\n */\r\n\r\nexport default class VanillaTilt {\r\n  constructor(element, settings = {}) {\r\n    if (!(element instanceof Node)) {\r\n      throw (\"Can't initialize VanillaTilt because \" + element + \" is not a Node.\");\r\n    }\r\n\r\n    this.width = null;\r\n    this.height = null;\r\n    this.left = null;\r\n    this.top = null;\r\n    this.transitionTimeout = null;\r\n    this.updateCall = null;\r\n\r\n    this.updateBind = this.update.bind(this);\r\n    this.resetBind = this.reset.bind(this);\r\n\r\n    this.element = element;\r\n    this.settings = this.extendSettings(settings);\r\n    this.elementListener = this.getElementListener();\r\n\r\n    this.reverse = this.settings.reverse ? -1 : 1;\r\n\r\n    this.glare = this.isSettingTrue(this.settings.glare);\r\n    this.glarePrerender = this.isSettingTrue(this.settings[\"glare-prerender\"]);\r\n    this.fullPageListening = this.isSettingTrue(this.settings[\"full-page-listening\"]);\r\n    this.gyroscope = this.isSettingTrue(this.settings.gyroscope);\r\n\r\n    if (this.glare) {\r\n      this.prepareGlare();\r\n    }\r\n\r\n    this.addEventListeners();\r\n  }\r\n\r\n  isSettingTrue(setting) {\r\n    return setting === \"\" || setting === true || setting === 1;\r\n  }\r\n\r\n  /**\r\n   * Method returns element what will be listen mouse events\r\n   * @return {Node}\r\n   */\r\n  getElementListener() {\r\n    if (!this.settings || !this.settings[\"mouse-event-element\"]) {\r\n      return this.element;\r\n    }\r\n\r\n    if (typeof this.settings[\"mouse-event-element\"] === \"string\") {\r\n      const mouseEventElement = document.querySelector(this.settings[\"mouse-event-element\"]);\r\n\r\n      if (mouseEventElement) {\r\n        return mouseEventElement;\r\n      }\r\n    }\r\n\r\n    if (this.settings[\"mouse-event-element\"] instanceof Node) {\r\n      return this.settings[\"mouse-event-element\"];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method set listen methods for this.elementListener\r\n   * @return {Node}\r\n   */\r\n  addEventListeners() {\r\n    this.onMouseEnterBind = this.onMouseEnter.bind(this);\r\n    this.onMouseMoveBind = this.onMouseMove.bind(this);\r\n    this.onMouseLeaveBind = this.onMouseLeave.bind(this);\r\n    this.onWindowResizeBind = this.onWindowResize.bind(this);\r\n    this.onDeviceOrientationBind = this.onDeviceOrientation.bind(this);\r\n\r\n    this.elementListener.addEventListener(\"mouseenter\", this.onMouseEnterBind);\r\n    this.elementListener.addEventListener(\"mouseleave\", this.onMouseLeaveBind);\r\n\r\n    if (this.fullPageListening) {\r\n        window.document.addEventListener(\"mousemove\", this.onMouseMoveBind);\r\n    } else {\r\n        this.elementListener.addEventListener(\"mousemove\", this.onMouseMoveBind);\r\n    }\r\n\r\n    if (this.glare) {\r\n      window.addEventListener(\"resize\", this.onWindowResizeBind);\r\n    }\r\n\r\n    if (this.gyroscope) {\r\n      window.addEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method remove event listeners from current this.elementListener\r\n   */\r\n  removeEventListeners() {\r\n    this.elementListener.removeEventListener(\"mouseenter\", this.onMouseEnterBind);\r\n    this.elementListener.removeEventListener(\"mouseleave\", this.onMouseLeaveBind);\r\n\r\n    if (this.fullPageListening) {\r\n        window.document.removeEventListener(\"mousemove\", this.onMouseMoveBind)\r\n    } else {\r\n        this.elementListener.removeEventListener(\"mousemove\", this.onMouseMoveBind);\r\n    }\r\n\r\n    if (this.gyroscope) {\r\n      window.removeEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\r\n    }\r\n\r\n    if (this.glare) {\r\n      window.removeEventListener(\"resize\", this.onWindowResizeBind);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    clearTimeout(this.transitionTimeout);\r\n    if (this.updateCall !== null) {\r\n      cancelAnimationFrame(this.updateCall);\r\n    }\r\n\r\n    this.reset();\r\n\r\n    this.removeEventListeners();\r\n    this.element.vanillaTilt = null;\r\n    delete this.element.vanillaTilt;\r\n\r\n    this.element = null;\r\n  }\r\n\r\n  onDeviceOrientation(event) {\r\n    if (event.gamma === null || event.beta === null) {\r\n      return;\r\n    }\r\n\r\n    this.updateElementPosition();\r\n\r\n    const totalAngleX = this.settings.gyroscopeMaxAngleX - this.settings.gyroscopeMinAngleX;\r\n    const totalAngleY = this.settings.gyroscopeMaxAngleY - this.settings.gyroscopeMinAngleY;\r\n\r\n    const degreesPerPixelX = totalAngleX / this.width;\r\n    const degreesPerPixelY = totalAngleY / this.height;\r\n\r\n    const angleX = event.gamma - this.settings.gyroscopeMinAngleX;\r\n    const angleY = event.beta - this.settings.gyroscopeMinAngleY;\r\n\r\n    const posX = angleX / degreesPerPixelX;\r\n    const posY = angleY / degreesPerPixelY;\r\n\r\n    if (this.updateCall !== null) {\r\n      cancelAnimationFrame(this.updateCall);\r\n    }\r\n\r\n    this.event = {\r\n      clientX: posX + this.left,\r\n      clientY: posY + this.top,\r\n    };\r\n\r\n    this.updateCall = requestAnimationFrame(this.updateBind);\r\n  }\r\n\r\n  onMouseEnter() {\r\n    this.updateElementPosition();\r\n    this.element.style.willChange = \"transform\";\r\n    this.setTransition();\r\n  }\r\n\r\n  onMouseMove(event) {\r\n    if (this.updateCall !== null) {\r\n      cancelAnimationFrame(this.updateCall);\r\n    }\r\n\r\n    this.event = event;\r\n    this.updateCall = requestAnimationFrame(this.updateBind);\r\n  }\r\n\r\n  onMouseLeave() {\r\n    if (this.fullPageListening) { return; }\r\n\r\n    this.setTransition();\r\n\r\n    if (this.settings.reset) {\r\n      requestAnimationFrame(this.resetBind);\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.event = {\r\n      pageX: this.left + this.width / 2,\r\n      pageY: this.top + this.height / 2\r\n    };\r\n\r\n    if (this.element && this.element.style) {\r\n      this.element.style.transform = `perspective(${this.settings.perspective}px) ` +\r\n        `rotateX(0deg) ` +\r\n        `rotateY(0deg) ` +\r\n        `scale3d(1, 1, 1)`;\r\n    }\r\n\r\n    if (this.glare) {\r\n      this.glareElement.style.transform = \"rotate(180deg) translate(-50%, -50%)\";\r\n      this.glareElement.style.opacity = \"0\";\r\n    }\r\n  }\r\n\r\n  getValues() {\r\n    if (this.fullPageListening) {\r\n        var x = this.event.clientX / document.body.clientWidth;\r\n        var y = this.event.clientY / document.body.clientHeight;\r\n    } else {\r\n        var x = (this.event.clientX - this.left) / this.width;\r\n        var y = (this.event.clientY - this.top) / this.height;\r\n    }\r\n\r\n    x = Math.min(Math.max(x, 0), 1);\r\n    y = Math.min(Math.max(y, 0), 1);\r\n\r\n    let tiltX = (this.reverse * (this.settings.max / 2 - x * this.settings.max)).toFixed(2);\r\n    let tiltY = (this.reverse * (y * this.settings.max - this.settings.max / 2)).toFixed(2);\r\n    let angle = Math.atan2(this.event.clientX - (this.left + this.width / 2), -(this.event.clientY - (this.top + this.height / 2))) * (180 / Math.PI);\r\n\r\n    return {\r\n      tiltX: tiltX,\r\n      tiltY: tiltY,\r\n      percentageX: x * 100,\r\n      percentageY: y * 100,\r\n      angle: angle\r\n    };\r\n  }\r\n\r\n  updateElementPosition() {\r\n    let rect = this.element.getBoundingClientRect();\r\n\r\n    this.width = this.element.offsetWidth;\r\n    this.height = this.element.offsetHeight;\r\n    this.left = rect.left;\r\n    this.top = rect.top;\r\n  }\r\n\r\n  update() {\r\n    let values = this.getValues();\r\n\r\n    this.element.style.transform = \"perspective(\" + this.settings.perspective + \"px) \" +\r\n      \"rotateX(\" + (this.settings.axis === \"x\" ? 0 : values.tiltY) + \"deg) \" +\r\n      \"rotateY(\" + (this.settings.axis === \"y\" ? 0 : values.tiltX) + \"deg) \" +\r\n      \"scale3d(\" + this.settings.scale + \", \" + this.settings.scale + \", \" + this.settings.scale + \")\";\r\n\r\n    if (this.glare) {\r\n      this.glareElement.style.transform = `rotate(${values.angle}deg) translate(-50%, -50%)`;\r\n      this.glareElement.style.opacity = `${values.percentageY * this.settings[\"max-glare\"] / 100}`;\r\n    }\r\n\r\n    this.element.dispatchEvent(new CustomEvent(\"tiltChange\", {\r\n      \"detail\": values\r\n    }));\r\n\r\n    this.updateCall = null;\r\n  }\r\n\r\n  /**\r\n   * Appends the glare element (if glarePrerender equals false)\r\n   * and sets the default style\r\n   */\r\n  prepareGlare() {\r\n    // If option pre-render is enabled we assume all html/css is present for an optimal glare effect.\r\n    if (!this.glarePrerender) {\r\n      // Create glare element\r\n      const jsTiltGlare = document.createElement(\"div\");\r\n      jsTiltGlare.classList.add(\"js-tilt-glare\");\r\n\r\n      const jsTiltGlareInner = document.createElement(\"div\");\r\n      jsTiltGlareInner.classList.add(\"js-tilt-glare-inner\");\r\n\r\n      jsTiltGlare.appendChild(jsTiltGlareInner);\r\n      this.element.appendChild(jsTiltGlare);\r\n    }\r\n\r\n    this.glareElementWrapper = this.element.querySelector(\".js-tilt-glare\");\r\n    this.glareElement = this.element.querySelector(\".js-tilt-glare-inner\");\r\n\r\n    if (this.glarePrerender) {\r\n      return;\r\n    }\r\n\r\n    Object.assign(this.glareElementWrapper.style, {\r\n      \"position\": \"absolute\",\r\n      \"top\": \"0\",\r\n      \"left\": \"0\",\r\n      \"width\": \"100%\",\r\n      \"height\": \"100%\",\r\n      \"overflow\": \"hidden\",\r\n      \"pointer-events\": \"none\"\r\n    });\r\n\r\n    Object.assign(this.glareElement.style, {\r\n      \"position\": \"absolute\",\r\n      \"top\": \"50%\",\r\n      \"left\": \"50%\",\r\n      \"pointer-events\": \"none\",\r\n      \"background-image\": `linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)`,\r\n      \"width\": `${this.element.offsetWidth * 2}px`,\r\n      \"height\": `${this.element.offsetWidth * 2}px`,\r\n      \"transform\": \"rotate(180deg) translate(-50%, -50%)\",\r\n      \"transform-origin\": \"0% 0%\",\r\n      \"opacity\": \"0\",\r\n    });\r\n  }\r\n\r\n  updateGlareSize() {\r\n    Object.assign(this.glareElement.style, {\r\n      \"width\": `${this.element.offsetWidth * 2}`,\r\n      \"height\": `${this.element.offsetWidth * 2}`,\r\n    });\r\n  }\r\n\r\n  onWindowResize() {\r\n    this.updateGlareSize();\r\n  }\r\n\r\n  setTransition() {\r\n    clearTimeout(this.transitionTimeout);\r\n    this.element.style.transition = this.settings.speed + \"ms \" + this.settings.easing;\r\n    if (this.glare) this.glareElement.style.transition = `opacity ${this.settings.speed}ms ${this.settings.easing}`;\r\n\r\n    this.transitionTimeout = setTimeout(() => {\r\n      this.element.style.transition = \"\";\r\n      if (this.glare) {\r\n        this.glareElement.style.transition = \"\";\r\n      }\r\n    }, this.settings.speed);\r\n\r\n  }\r\n\r\n  /**\r\n   * Method return patched settings of instance\r\n   * @param {boolean} settings.reverse - reverse the tilt direction\r\n   * @param {number} settings.max - max tilt rotation (degrees)\r\n   * @param {number} settings.perspective - Transform perspective, the lower the more extreme the tilt gets\r\n   * @param {string} settings.easing - Easing on enter/exit\r\n   * @param {number} settings.scale - 2 = 200%, 1.5 = 150%, etc..\r\n   * @param {number} settings.speed - Speed of the enter/exit transition\r\n   * @param {boolean} settings.transition - Set a transition on enter/exit\r\n   * @param settings.axis - What axis should be disabled. Can be X or Y\r\n   * @param {boolean} settings.glare - What axis should be disabled. Can be X or Y\r\n   * @param {number} settings.max-glare - the maximum \"glare\" opacity (1 = 100%, 0.5 = 50%)\r\n   * @param {boolean} settings.glare-prerender - false = VanillaTilt creates the glare elements for you, otherwise\r\n   * @param {string|object} settings.mouse-event-element - String selector or link to HTML-element what will be listen mouse events\r\n   * @param {boolean} settings.reset - false = If the tilt effect has to be reset on exit\r\n   * @param {gyroscope} settings.gyroscope - Enable tilting by deviceorientation events\r\n   * @param {gyroscopeSensitivity} settings.gyroscopeSensitivity - Between 0 and 1 - The angle at which max tilt position is reached. 1 = 90deg, 0.5 = 45deg, etc..\r\n   */\r\n  extendSettings(settings) {\r\n    let defaultSettings = {\r\n      reverse: false,\r\n      max: 35,\r\n      perspective: 1000,\r\n      easing: \"cubic-bezier(.03,.98,.52,.99)\",\r\n      scale: 1,\r\n      speed: 300,\r\n      transition: true,\r\n      axis: null,\r\n      glare: false,\r\n      \"max-glare\": 1,\r\n      \"glare-prerender\": false,\r\n      \"full-page-listening\": false,\r\n      \"mouse-event-element\": null,\r\n      reset: true,\r\n      gyroscope: true,\r\n      gyroscopeMinAngleX: -45,\r\n      gyroscopeMaxAngleX: 45,\r\n      gyroscopeMinAngleY: -45,\r\n      gyroscopeMaxAngleY: 45,\r\n    };\r\n\r\n    let newSettings = {};\r\n    for (var property in defaultSettings) {\r\n      if (property in settings) {\r\n        newSettings[property] = settings[property];\r\n      } else if (this.element.hasAttribute(\"data-tilt-\" + property)) {\r\n        let attribute = this.element.getAttribute(\"data-tilt-\" + property);\r\n        try {\r\n          newSettings[property] = JSON.parse(attribute);\r\n        } catch (e) {\r\n          newSettings[property] = attribute;\r\n        }\r\n\r\n      } else {\r\n        newSettings[property] = defaultSettings[property];\r\n      }\r\n    }\r\n\r\n    return newSettings;\r\n  }\r\n\r\n  static init(elements, settings) {\r\n    if (elements instanceof Node) {\r\n      elements = [elements];\r\n    }\r\n\r\n    if (elements instanceof NodeList) {\r\n      elements = [].slice.call(elements);\r\n    }\r\n\r\n    if (!(elements instanceof Array)) {\r\n      return;\r\n    }\r\n\r\n    elements.forEach((element) => {\r\n      if (!(\"vanillaTilt\" in element)) {\r\n        element.vanillaTilt = new VanillaTilt(element, settings);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nif (typeof document !== \"undefined\") {\r\n  /* expose the class to window */\r\n  window.VanillaTilt = VanillaTilt;\r\n\r\n  /**\r\n   * Auto load\r\n   */\r\n  VanillaTilt.init(document.querySelectorAll(\"[data-tilt]\"));\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/vanilla-tilt.js	(revision 7dddcf950b75f7c2e2a90d59473a49f52dd1721a)
+++ src/vanilla-tilt.js	(date 1555098281469)
@@ -15,6 +15,13 @@
     this.height = null;
     this.left = null;
     this.top = null;
+
+    this.gammazero = null;
+    this.betazero = null;
+    this.lastgammazero = null;
+    this.lastbetazero = null;
+    this.oriented = 60;
+
     this.transitionTimeout = null;
     this.updateCall = null;
 
@@ -80,9 +87,9 @@
     this.elementListener.addEventListener("mouseleave", this.onMouseLeaveBind);
 
     if (this.fullPageListening) {
-        window.document.addEventListener("mousemove", this.onMouseMoveBind);
+      window.document.addEventListener("mousemove", this.onMouseMoveBind);
     } else {
-        this.elementListener.addEventListener("mousemove", this.onMouseMoveBind);
+      this.elementListener.addEventListener("mousemove", this.onMouseMoveBind);
     }
 
     if (this.glare) {
@@ -102,9 +109,9 @@
     this.elementListener.removeEventListener("mouseleave", this.onMouseLeaveBind);
 
     if (this.fullPageListening) {
-        window.document.removeEventListener("mousemove", this.onMouseMoveBind)
+      window.document.removeEventListener("mousemove", this.onMouseMoveBind)
     } else {
-        this.elementListener.removeEventListener("mousemove", this.onMouseMoveBind);
+      this.elementListener.removeEventListener("mousemove", this.onMouseMoveBind);
     }
 
     if (this.gyroscope) {
@@ -138,14 +145,27 @@
 
     this.updateElementPosition();
 
+    if (this.oriented > 0) {
+      this.lastgammazero = this.gammazero;
+      this.lastbetazero = this.betazero;
+      if (this.gammazero == null) {
+        this.gammazero = event.gamma;
+        this.betazero = event.beta;
+      } else {
+        this.gammazero = (event.gamma + this.lastgammazero) / 2;
+        this.betazero = (event.beta + this.lastbetazero) / 2;
+      }
+      this.oriented -= 1;
+    }
+
     const totalAngleX = this.settings.gyroscopeMaxAngleX - this.settings.gyroscopeMinAngleX;
     const totalAngleY = this.settings.gyroscopeMaxAngleY - this.settings.gyroscopeMinAngleY;
 
     const degreesPerPixelX = totalAngleX / this.width;
     const degreesPerPixelY = totalAngleY / this.height;
 
-    const angleX = event.gamma - this.settings.gyroscopeMinAngleX;
-    const angleY = event.beta - this.settings.gyroscopeMinAngleY;
+    const angleX = event.gamma - (this.settings.gyroscopeMinAngleX + this.gammazero);
+    const angleY = event.beta - (this.settings.gyroscopeMinAngleY + this.betazero);
 
     const posX = angleX / degreesPerPixelX;
     const posY = angleY / degreesPerPixelY;
@@ -178,7 +198,9 @@
   }
 
   onMouseLeave() {
-    if (this.fullPageListening) { return; }
+    if (this.fullPageListening) {
+      return;
+    }
 
     this.setTransition();
 
@@ -208,11 +230,11 @@
 
   getValues() {
     if (this.fullPageListening) {
-        var x = this.event.clientX / document.body.clientWidth;
-        var y = this.event.clientY / document.body.clientHeight;
+      var x = this.event.clientX / document.body.clientWidth;
+      var y = this.event.clientY / document.body.clientHeight;
     } else {
-        var x = (this.event.clientX - this.left) / this.width;
-        var y = (this.event.clientY - this.top) / this.height;
+      var x = (this.event.clientX - this.left) / this.width;
+      var y = (this.event.clientY - this.top) / this.height;
     }
 
     x = Math.min(Math.max(x, 0), 1);
Index: dist/vanilla-tilt.babel.min.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>var VanillaTilt=function(){\"use strict\";var e=function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")},t=function(){function t(i){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(e(this,t),!(i instanceof Node))throw\"Can't initialize VanillaTilt because \"+i+\" is not a Node.\";this.width=null,this.height=null,this.left=null,this.top=null,this.transitionTimeout=null,this.updateCall=null,this.updateBind=this.update.bind(this),this.resetBind=this.reset.bind(this),this.element=i,this.settings=this.extendSettings(n),this.elementListener=this.getElementListener(),this.reverse=this.settings.reverse?-1:1,this.glare=this.isSettingTrue(this.settings.glare),this.glarePrerender=this.isSettingTrue(this.settings[\"glare-prerender\"]),this.fullPageListening=this.isSettingTrue(this.settings[\"full-page-listening\"]),this.gyroscope=this.isSettingTrue(this.settings.gyroscope),this.glare&&this.prepareGlare(),this.addEventListeners()}return t.prototype.isSettingTrue=function(e){return\"\"===e||!0===e||1===e},t.prototype.getElementListener=function(){if(!this.settings||!this.settings[\"mouse-event-element\"])return this.element;if(\"string\"==typeof this.settings[\"mouse-event-element\"]){var e=document.querySelector(this.settings[\"mouse-event-element\"]);if(e)return e}return this.settings[\"mouse-event-element\"]instanceof Node?this.settings[\"mouse-event-element\"]:void 0},t.prototype.addEventListeners=function(){this.onMouseEnterBind=this.onMouseEnter.bind(this),this.onMouseMoveBind=this.onMouseMove.bind(this),this.onMouseLeaveBind=this.onMouseLeave.bind(this),this.onWindowResizeBind=this.onWindowResize.bind(this),this.onDeviceOrientationBind=this.onDeviceOrientation.bind(this),this.elementListener.addEventListener(\"mouseenter\",this.onMouseEnterBind),this.elementListener.addEventListener(\"mouseleave\",this.onMouseLeaveBind),this.fullPageListening?window.document.addEventListener(\"mousemove\",this.onMouseMoveBind):this.elementListener.addEventListener(\"mousemove\",this.onMouseMoveBind),this.glare&&window.addEventListener(\"resize\",this.onWindowResizeBind),this.gyroscope&&window.addEventListener(\"deviceorientation\",this.onDeviceOrientationBind)},t.prototype.removeEventListeners=function(){this.elementListener.removeEventListener(\"mouseenter\",this.onMouseEnterBind),this.elementListener.removeEventListener(\"mouseleave\",this.onMouseLeaveBind),this.fullPageListening?window.document.removeEventListener(\"mousemove\",this.onMouseMoveBind):this.elementListener.removeEventListener(\"mousemove\",this.onMouseMoveBind),this.gyroscope&&window.removeEventListener(\"deviceorientation\",this.onDeviceOrientationBind),this.glare&&window.removeEventListener(\"resize\",this.onWindowResizeBind)},t.prototype.destroy=function(){clearTimeout(this.transitionTimeout),null!==this.updateCall&&cancelAnimationFrame(this.updateCall),this.reset(),this.removeEventListeners(),this.element.vanillaTilt=null,delete this.element.vanillaTilt,this.element=null},t.prototype.onDeviceOrientation=function(e){if(null!==e.gamma&&null!==e.beta){this.updateElementPosition();var t=this.settings.gyroscopeMaxAngleX-this.settings.gyroscopeMinAngleX,i=this.settings.gyroscopeMaxAngleY-this.settings.gyroscopeMinAngleY,n=t/this.width,s=i/this.height,o=(e.gamma-this.settings.gyroscopeMinAngleX)/n,l=(e.beta-this.settings.gyroscopeMinAngleY)/s;null!==this.updateCall&&cancelAnimationFrame(this.updateCall),this.event={clientX:o+this.left,clientY:l+this.top},this.updateCall=requestAnimationFrame(this.updateBind)}},t.prototype.onMouseEnter=function(){this.updateElementPosition(),this.element.style.willChange=\"transform\",this.setTransition()},t.prototype.onMouseMove=function(e){null!==this.updateCall&&cancelAnimationFrame(this.updateCall),this.event=e,this.updateCall=requestAnimationFrame(this.updateBind)},t.prototype.onMouseLeave=function(){this.fullPageListening||(this.setTransition(),this.settings.reset&&requestAnimationFrame(this.resetBind))},t.prototype.reset=function(){this.event={pageX:this.left+this.width/2,pageY:this.top+this.height/2},this.element&&this.element.style&&(this.element.style.transform=\"perspective(\"+this.settings.perspective+\"px) rotateX(0deg) rotateY(0deg) scale3d(1, 1, 1)\"),this.glare&&(this.glareElement.style.transform=\"rotate(180deg) translate(-50%, -50%)\",this.glareElement.style.opacity=\"0\")},t.prototype.getValues=function(){if(this.fullPageListening)var e=this.event.clientX/document.body.clientWidth,t=this.event.clientY/document.body.clientHeight;else e=(this.event.clientX-this.left)/this.width,t=(this.event.clientY-this.top)/this.height;return e=Math.min(Math.max(e,0),1),t=Math.min(Math.max(t,0),1),{tiltX:(this.reverse*(this.settings.max/2-e*this.settings.max)).toFixed(2),tiltY:(this.reverse*(t*this.settings.max-this.settings.max/2)).toFixed(2),percentageX:100*e,percentageY:100*t,angle:Math.atan2(this.event.clientX-(this.left+this.width/2),-(this.event.clientY-(this.top+this.height/2)))*(180/Math.PI)}},t.prototype.updateElementPosition=function(){var e=this.element.getBoundingClientRect();this.width=this.element.offsetWidth,this.height=this.element.offsetHeight,this.left=e.left,this.top=e.top},t.prototype.update=function(){var e=this.getValues();this.element.style.transform=\"perspective(\"+this.settings.perspective+\"px) rotateX(\"+(\"x\"===this.settings.axis?0:e.tiltY)+\"deg) rotateY(\"+(\"y\"===this.settings.axis?0:e.tiltX)+\"deg) scale3d(\"+this.settings.scale+\", \"+this.settings.scale+\", \"+this.settings.scale+\")\",this.glare&&(this.glareElement.style.transform=\"rotate(\"+e.angle+\"deg) translate(-50%, -50%)\",this.glareElement.style.opacity=\"\"+e.percentageY*this.settings[\"max-glare\"]/100),this.element.dispatchEvent(new CustomEvent(\"tiltChange\",{detail:e})),this.updateCall=null},t.prototype.prepareGlare=function(){if(!this.glarePrerender){var e=document.createElement(\"div\");e.classList.add(\"js-tilt-glare\");var t=document.createElement(\"div\");t.classList.add(\"js-tilt-glare-inner\"),e.appendChild(t),this.element.appendChild(e)}this.glareElementWrapper=this.element.querySelector(\".js-tilt-glare\"),this.glareElement=this.element.querySelector(\".js-tilt-glare-inner\"),this.glarePrerender||(Object.assign(this.glareElementWrapper.style,{position:\"absolute\",top:\"0\",left:\"0\",width:\"100%\",height:\"100%\",overflow:\"hidden\",\"pointer-events\":\"none\"}),Object.assign(this.glareElement.style,{position:\"absolute\",top:\"50%\",left:\"50%\",\"pointer-events\":\"none\",\"background-image\":\"linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)\",width:2*this.element.offsetWidth+\"px\",height:2*this.element.offsetWidth+\"px\",transform:\"rotate(180deg) translate(-50%, -50%)\",\"transform-origin\":\"0% 0%\",opacity:\"0\"}))},t.prototype.updateGlareSize=function(){Object.assign(this.glareElement.style,{width:\"\"+2*this.element.offsetWidth,height:\"\"+2*this.element.offsetWidth})},t.prototype.onWindowResize=function(){this.updateGlareSize()},t.prototype.setTransition=function(){var e=this;clearTimeout(this.transitionTimeout),this.element.style.transition=this.settings.speed+\"ms \"+this.settings.easing,this.glare&&(this.glareElement.style.transition=\"opacity \"+this.settings.speed+\"ms \"+this.settings.easing),this.transitionTimeout=setTimeout(function(){e.element.style.transition=\"\",e.glare&&(e.glareElement.style.transition=\"\")},this.settings.speed)},t.prototype.extendSettings=function(e){var t={reverse:!1,max:35,perspective:1e3,easing:\"cubic-bezier(.03,.98,.52,.99)\",scale:1,speed:300,transition:!0,axis:null,glare:!1,\"max-glare\":1,\"glare-prerender\":!1,\"full-page-listening\":!1,\"mouse-event-element\":null,reset:!0,gyroscope:!0,gyroscopeMinAngleX:-45,gyroscopeMaxAngleX:45,gyroscopeMinAngleY:-45,gyroscopeMaxAngleY:45},i={};for(var n in t)if(n in e)i[n]=e[n];else if(this.element.hasAttribute(\"data-tilt-\"+n)){var s=this.element.getAttribute(\"data-tilt-\"+n);try{i[n]=JSON.parse(s)}catch(e){i[n]=s}}else i[n]=t[n];return i},t.init=function(e,i){e instanceof Node&&(e=[e]),e instanceof NodeList&&(e=[].slice.call(e)),e instanceof Array&&e.forEach(function(e){\"vanillaTilt\"in e||(e.vanillaTilt=new t(e,i))})},t}();return\"undefined\"!=typeof document&&(window.VanillaTilt=t,t.init(document.querySelectorAll(\"[data-tilt]\"))),t}();
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- dist/vanilla-tilt.babel.min.js	(revision 7dddcf950b75f7c2e2a90d59473a49f52dd1721a)
+++ dist/vanilla-tilt.babel.min.js	(date 1555098296860)
@@ -1,1 +1,1 @@
-var VanillaTilt=function(){"use strict";var e=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},t=function(){function t(i){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(e(this,t),!(i instanceof Node))throw"Can't initialize VanillaTilt because "+i+" is not a Node.";this.width=null,this.height=null,this.left=null,this.top=null,this.transitionTimeout=null,this.updateCall=null,this.updateBind=this.update.bind(this),this.resetBind=this.reset.bind(this),this.element=i,this.settings=this.extendSettings(n),this.elementListener=this.getElementListener(),this.reverse=this.settings.reverse?-1:1,this.glare=this.isSettingTrue(this.settings.glare),this.glarePrerender=this.isSettingTrue(this.settings["glare-prerender"]),this.fullPageListening=this.isSettingTrue(this.settings["full-page-listening"]),this.gyroscope=this.isSettingTrue(this.settings.gyroscope),this.glare&&this.prepareGlare(),this.addEventListeners()}return t.prototype.isSettingTrue=function(e){return""===e||!0===e||1===e},t.prototype.getElementListener=function(){if(!this.settings||!this.settings["mouse-event-element"])return this.element;if("string"==typeof this.settings["mouse-event-element"]){var e=document.querySelector(this.settings["mouse-event-element"]);if(e)return e}return this.settings["mouse-event-element"]instanceof Node?this.settings["mouse-event-element"]:void 0},t.prototype.addEventListeners=function(){this.onMouseEnterBind=this.onMouseEnter.bind(this),this.onMouseMoveBind=this.onMouseMove.bind(this),this.onMouseLeaveBind=this.onMouseLeave.bind(this),this.onWindowResizeBind=this.onWindowResize.bind(this),this.onDeviceOrientationBind=this.onDeviceOrientation.bind(this),this.elementListener.addEventListener("mouseenter",this.onMouseEnterBind),this.elementListener.addEventListener("mouseleave",this.onMouseLeaveBind),this.fullPageListening?window.document.addEventListener("mousemove",this.onMouseMoveBind):this.elementListener.addEventListener("mousemove",this.onMouseMoveBind),this.glare&&window.addEventListener("resize",this.onWindowResizeBind),this.gyroscope&&window.addEventListener("deviceorientation",this.onDeviceOrientationBind)},t.prototype.removeEventListeners=function(){this.elementListener.removeEventListener("mouseenter",this.onMouseEnterBind),this.elementListener.removeEventListener("mouseleave",this.onMouseLeaveBind),this.fullPageListening?window.document.removeEventListener("mousemove",this.onMouseMoveBind):this.elementListener.removeEventListener("mousemove",this.onMouseMoveBind),this.gyroscope&&window.removeEventListener("deviceorientation",this.onDeviceOrientationBind),this.glare&&window.removeEventListener("resize",this.onWindowResizeBind)},t.prototype.destroy=function(){clearTimeout(this.transitionTimeout),null!==this.updateCall&&cancelAnimationFrame(this.updateCall),this.reset(),this.removeEventListeners(),this.element.vanillaTilt=null,delete this.element.vanillaTilt,this.element=null},t.prototype.onDeviceOrientation=function(e){if(null!==e.gamma&&null!==e.beta){this.updateElementPosition();var t=this.settings.gyroscopeMaxAngleX-this.settings.gyroscopeMinAngleX,i=this.settings.gyroscopeMaxAngleY-this.settings.gyroscopeMinAngleY,n=t/this.width,s=i/this.height,o=(e.gamma-this.settings.gyroscopeMinAngleX)/n,l=(e.beta-this.settings.gyroscopeMinAngleY)/s;null!==this.updateCall&&cancelAnimationFrame(this.updateCall),this.event={clientX:o+this.left,clientY:l+this.top},this.updateCall=requestAnimationFrame(this.updateBind)}},t.prototype.onMouseEnter=function(){this.updateElementPosition(),this.element.style.willChange="transform",this.setTransition()},t.prototype.onMouseMove=function(e){null!==this.updateCall&&cancelAnimationFrame(this.updateCall),this.event=e,this.updateCall=requestAnimationFrame(this.updateBind)},t.prototype.onMouseLeave=function(){this.fullPageListening||(this.setTransition(),this.settings.reset&&requestAnimationFrame(this.resetBind))},t.prototype.reset=function(){this.event={pageX:this.left+this.width/2,pageY:this.top+this.height/2},this.element&&this.element.style&&(this.element.style.transform="perspective("+this.settings.perspective+"px) rotateX(0deg) rotateY(0deg) scale3d(1, 1, 1)"),this.glare&&(this.glareElement.style.transform="rotate(180deg) translate(-50%, -50%)",this.glareElement.style.opacity="0")},t.prototype.getValues=function(){if(this.fullPageListening)var e=this.event.clientX/document.body.clientWidth,t=this.event.clientY/document.body.clientHeight;else e=(this.event.clientX-this.left)/this.width,t=(this.event.clientY-this.top)/this.height;return e=Math.min(Math.max(e,0),1),t=Math.min(Math.max(t,0),1),{tiltX:(this.reverse*(this.settings.max/2-e*this.settings.max)).toFixed(2),tiltY:(this.reverse*(t*this.settings.max-this.settings.max/2)).toFixed(2),percentageX:100*e,percentageY:100*t,angle:Math.atan2(this.event.clientX-(this.left+this.width/2),-(this.event.clientY-(this.top+this.height/2)))*(180/Math.PI)}},t.prototype.updateElementPosition=function(){var e=this.element.getBoundingClientRect();this.width=this.element.offsetWidth,this.height=this.element.offsetHeight,this.left=e.left,this.top=e.top},t.prototype.update=function(){var e=this.getValues();this.element.style.transform="perspective("+this.settings.perspective+"px) rotateX("+("x"===this.settings.axis?0:e.tiltY)+"deg) rotateY("+("y"===this.settings.axis?0:e.tiltX)+"deg) scale3d("+this.settings.scale+", "+this.settings.scale+", "+this.settings.scale+")",this.glare&&(this.glareElement.style.transform="rotate("+e.angle+"deg) translate(-50%, -50%)",this.glareElement.style.opacity=""+e.percentageY*this.settings["max-glare"]/100),this.element.dispatchEvent(new CustomEvent("tiltChange",{detail:e})),this.updateCall=null},t.prototype.prepareGlare=function(){if(!this.glarePrerender){var e=document.createElement("div");e.classList.add("js-tilt-glare");var t=document.createElement("div");t.classList.add("js-tilt-glare-inner"),e.appendChild(t),this.element.appendChild(e)}this.glareElementWrapper=this.element.querySelector(".js-tilt-glare"),this.glareElement=this.element.querySelector(".js-tilt-glare-inner"),this.glarePrerender||(Object.assign(this.glareElementWrapper.style,{position:"absolute",top:"0",left:"0",width:"100%",height:"100%",overflow:"hidden","pointer-events":"none"}),Object.assign(this.glareElement.style,{position:"absolute",top:"50%",left:"50%","pointer-events":"none","background-image":"linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)",width:2*this.element.offsetWidth+"px",height:2*this.element.offsetWidth+"px",transform:"rotate(180deg) translate(-50%, -50%)","transform-origin":"0% 0%",opacity:"0"}))},t.prototype.updateGlareSize=function(){Object.assign(this.glareElement.style,{width:""+2*this.element.offsetWidth,height:""+2*this.element.offsetWidth})},t.prototype.onWindowResize=function(){this.updateGlareSize()},t.prototype.setTransition=function(){var e=this;clearTimeout(this.transitionTimeout),this.element.style.transition=this.settings.speed+"ms "+this.settings.easing,this.glare&&(this.glareElement.style.transition="opacity "+this.settings.speed+"ms "+this.settings.easing),this.transitionTimeout=setTimeout(function(){e.element.style.transition="",e.glare&&(e.glareElement.style.transition="")},this.settings.speed)},t.prototype.extendSettings=function(e){var t={reverse:!1,max:35,perspective:1e3,easing:"cubic-bezier(.03,.98,.52,.99)",scale:1,speed:300,transition:!0,axis:null,glare:!1,"max-glare":1,"glare-prerender":!1,"full-page-listening":!1,"mouse-event-element":null,reset:!0,gyroscope:!0,gyroscopeMinAngleX:-45,gyroscopeMaxAngleX:45,gyroscopeMinAngleY:-45,gyroscopeMaxAngleY:45},i={};for(var n in t)if(n in e)i[n]=e[n];else if(this.element.hasAttribute("data-tilt-"+n)){var s=this.element.getAttribute("data-tilt-"+n);try{i[n]=JSON.parse(s)}catch(e){i[n]=s}}else i[n]=t[n];return i},t.init=function(e,i){e instanceof Node&&(e=[e]),e instanceof NodeList&&(e=[].slice.call(e)),e instanceof Array&&e.forEach(function(e){"vanillaTilt"in e||(e.vanillaTilt=new t(e,i))})},t}();return"undefined"!=typeof document&&(window.VanillaTilt=t,t.init(document.querySelectorAll("[data-tilt]"))),t}();
\ No newline at end of file
+var VanillaTilt=function(){"use strict";var e=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},t=function(){function t(i){var s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(e(this,t),!(i instanceof Node))throw"Can't initialize VanillaTilt because "+i+" is not a Node.";this.width=null,this.height=null,this.left=null,this.top=null,this.gammazero=null,this.betazero=null,this.lastgammazero=null,this.lastbetazero=null,this.oriented=60,this.transitionTimeout=null,this.updateCall=null,this.updateBind=this.update.bind(this),this.resetBind=this.reset.bind(this),this.element=i,this.settings=this.extendSettings(s),this.elementListener=this.getElementListener(),this.reverse=this.settings.reverse?-1:1,this.glare=this.isSettingTrue(this.settings.glare),this.glarePrerender=this.isSettingTrue(this.settings["glare-prerender"]),this.fullPageListening=this.isSettingTrue(this.settings["full-page-listening"]),this.gyroscope=this.isSettingTrue(this.settings.gyroscope),this.glare&&this.prepareGlare(),this.addEventListeners()}return t.prototype.isSettingTrue=function(e){return""===e||!0===e||1===e},t.prototype.getElementListener=function(){if(!this.settings||!this.settings["mouse-event-element"])return this.element;if("string"==typeof this.settings["mouse-event-element"]){var e=document.querySelector(this.settings["mouse-event-element"]);if(e)return e}return this.settings["mouse-event-element"]instanceof Node?this.settings["mouse-event-element"]:void 0},t.prototype.addEventListeners=function(){this.onMouseEnterBind=this.onMouseEnter.bind(this),this.onMouseMoveBind=this.onMouseMove.bind(this),this.onMouseLeaveBind=this.onMouseLeave.bind(this),this.onWindowResizeBind=this.onWindowResize.bind(this),this.onDeviceOrientationBind=this.onDeviceOrientation.bind(this),this.elementListener.addEventListener("mouseenter",this.onMouseEnterBind),this.elementListener.addEventListener("mouseleave",this.onMouseLeaveBind),this.fullPageListening?window.document.addEventListener("mousemove",this.onMouseMoveBind):this.elementListener.addEventListener("mousemove",this.onMouseMoveBind),this.glare&&window.addEventListener("resize",this.onWindowResizeBind),this.gyroscope&&window.addEventListener("deviceorientation",this.onDeviceOrientationBind)},t.prototype.removeEventListeners=function(){this.elementListener.removeEventListener("mouseenter",this.onMouseEnterBind),this.elementListener.removeEventListener("mouseleave",this.onMouseLeaveBind),this.fullPageListening?window.document.removeEventListener("mousemove",this.onMouseMoveBind):this.elementListener.removeEventListener("mousemove",this.onMouseMoveBind),this.gyroscope&&window.removeEventListener("deviceorientation",this.onDeviceOrientationBind),this.glare&&window.removeEventListener("resize",this.onWindowResizeBind)},t.prototype.destroy=function(){clearTimeout(this.transitionTimeout),null!==this.updateCall&&cancelAnimationFrame(this.updateCall),this.reset(),this.removeEventListeners(),this.element.vanillaTilt=null,delete this.element.vanillaTilt,this.element=null},t.prototype.onDeviceOrientation=function(e){if(null!==e.gamma&&null!==e.beta){this.updateElementPosition(),this.oriented>0&&(this.lastgammazero=this.gammazero,this.lastbetazero=this.betazero,null==this.gammazero?(this.gammazero=e.gamma,this.betazero=e.beta):(this.gammazero=(e.gamma+this.lastgammazero)/2,this.betazero=(e.beta+this.lastbetazero)/2),this.oriented-=1);var t=this.settings.gyroscopeMaxAngleX-this.settings.gyroscopeMinAngleX,i=this.settings.gyroscopeMaxAngleY-this.settings.gyroscopeMinAngleY,s=t/this.width,n=i/this.height,o=(e.gamma-(this.settings.gyroscopeMinAngleX+this.gammazero))/s,a=(e.beta-(this.settings.gyroscopeMinAngleY+this.betazero))/n;null!==this.updateCall&&cancelAnimationFrame(this.updateCall),this.event={clientX:o+this.left,clientY:a+this.top},this.updateCall=requestAnimationFrame(this.updateBind)}},t.prototype.onMouseEnter=function(){this.updateElementPosition(),this.element.style.willChange="transform",this.setTransition()},t.prototype.onMouseMove=function(e){null!==this.updateCall&&cancelAnimationFrame(this.updateCall),this.event=e,this.updateCall=requestAnimationFrame(this.updateBind)},t.prototype.onMouseLeave=function(){this.fullPageListening||(this.setTransition(),this.settings.reset&&requestAnimationFrame(this.resetBind))},t.prototype.reset=function(){this.event={pageX:this.left+this.width/2,pageY:this.top+this.height/2},this.element&&this.element.style&&(this.element.style.transform="perspective("+this.settings.perspective+"px) rotateX(0deg) rotateY(0deg) scale3d(1, 1, 1)"),this.glare&&(this.glareElement.style.transform="rotate(180deg) translate(-50%, -50%)",this.glareElement.style.opacity="0")},t.prototype.getValues=function(){if(this.fullPageListening)var e=this.event.clientX/document.body.clientWidth,t=this.event.clientY/document.body.clientHeight;else e=(this.event.clientX-this.left)/this.width,t=(this.event.clientY-this.top)/this.height;return e=Math.min(Math.max(e,0),1),t=Math.min(Math.max(t,0),1),{tiltX:(this.reverse*(this.settings.max/2-e*this.settings.max)).toFixed(2),tiltY:(this.reverse*(t*this.settings.max-this.settings.max/2)).toFixed(2),percentageX:100*e,percentageY:100*t,angle:Math.atan2(this.event.clientX-(this.left+this.width/2),-(this.event.clientY-(this.top+this.height/2)))*(180/Math.PI)}},t.prototype.updateElementPosition=function(){var e=this.element.getBoundingClientRect();this.width=this.element.offsetWidth,this.height=this.element.offsetHeight,this.left=e.left,this.top=e.top},t.prototype.update=function(){var e=this.getValues();this.element.style.transform="perspective("+this.settings.perspective+"px) rotateX("+("x"===this.settings.axis?0:e.tiltY)+"deg) rotateY("+("y"===this.settings.axis?0:e.tiltX)+"deg) scale3d("+this.settings.scale+", "+this.settings.scale+", "+this.settings.scale+")",this.glare&&(this.glareElement.style.transform="rotate("+e.angle+"deg) translate(-50%, -50%)",this.glareElement.style.opacity=""+e.percentageY*this.settings["max-glare"]/100),this.element.dispatchEvent(new CustomEvent("tiltChange",{detail:e})),this.updateCall=null},t.prototype.prepareGlare=function(){if(!this.glarePrerender){var e=document.createElement("div");e.classList.add("js-tilt-glare");var t=document.createElement("div");t.classList.add("js-tilt-glare-inner"),e.appendChild(t),this.element.appendChild(e)}this.glareElementWrapper=this.element.querySelector(".js-tilt-glare"),this.glareElement=this.element.querySelector(".js-tilt-glare-inner"),this.glarePrerender||(Object.assign(this.glareElementWrapper.style,{position:"absolute",top:"0",left:"0",width:"100%",height:"100%",overflow:"hidden","pointer-events":"none"}),Object.assign(this.glareElement.style,{position:"absolute",top:"50%",left:"50%","pointer-events":"none","background-image":"linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)",width:2*this.element.offsetWidth+"px",height:2*this.element.offsetWidth+"px",transform:"rotate(180deg) translate(-50%, -50%)","transform-origin":"0% 0%",opacity:"0"}))},t.prototype.updateGlareSize=function(){Object.assign(this.glareElement.style,{width:""+2*this.element.offsetWidth,height:""+2*this.element.offsetWidth})},t.prototype.onWindowResize=function(){this.updateGlareSize()},t.prototype.setTransition=function(){var e=this;clearTimeout(this.transitionTimeout),this.element.style.transition=this.settings.speed+"ms "+this.settings.easing,this.glare&&(this.glareElement.style.transition="opacity "+this.settings.speed+"ms "+this.settings.easing),this.transitionTimeout=setTimeout(function(){e.element.style.transition="",e.glare&&(e.glareElement.style.transition="")},this.settings.speed)},t.prototype.extendSettings=function(e){var t={reverse:!1,max:35,perspective:1e3,easing:"cubic-bezier(.03,.98,.52,.99)",scale:1,speed:300,transition:!0,axis:null,glare:!1,"max-glare":1,"glare-prerender":!1,"full-page-listening":!1,"mouse-event-element":null,reset:!0,gyroscope:!0,gyroscopeMinAngleX:-45,gyroscopeMaxAngleX:45,gyroscopeMinAngleY:-45,gyroscopeMaxAngleY:45},i={};for(var s in t)if(s in e)i[s]=e[s];else if(this.element.hasAttribute("data-tilt-"+s)){var n=this.element.getAttribute("data-tilt-"+s);try{i[s]=JSON.parse(n)}catch(e){i[s]=n}}else i[s]=t[s];return i},t.init=function(e,i){e instanceof Node&&(e=[e]),e instanceof NodeList&&(e=[].slice.call(e)),e instanceof Array&&e.forEach(function(e){"vanillaTilt"in e||(e.vanillaTilt=new t(e,i))})},t}();return"undefined"!=typeof document&&(window.VanillaTilt=t,t.init(document.querySelectorAll("[data-tilt]"))),t}();
\ No newline at end of file
